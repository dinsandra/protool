{"version":3,"sources":["ProtoConvert.js","LocalStorage.js","view/MessageBuilder.js","view/ProtoLibrary.js","view/Main.js","index.js"],"names":["require","List","Map","protobuf","shortid","converters","binary","messageToBinary","messageFromBinary","binary-hex","messageDescriptor","message","binaryMessage","Array","from","map","b","toString","join","toUpperCase","hexMessage","binaryMessageArray","i","length","push","parseInt","substring","Uint8Array","binary-b64","util","base64","encode","base64Message","window","atob","json","protoMessage","messageToProto","JSON","stringify","jsonMessage","parse","asUTF8","messageFromProtoMessage","json-camel","camelCaseMessage","replaceFieldNames","toObject","toJSONOptions","fieldName","camelCase","jsonCamelCaseMessage","reverseReplaceFieldNames","camelCaseFieldName","json-id","pbJsonMessage","fields","id","jsonIdsMessage","idsMessage","fieldId","converterFormats","Object","keys","sort","converterName","format","converterExtension","convertTo","finish","replacementFunc","fromEntries","entries","_ref","_ref2","G_devel_Javascript_protool_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","k","v","newName","field","resolvedType","constructor","Type","repeated","value","messageObject","messageToProtoInternal","fromObject","mapEntries","_ref3","_ref4","key","valueEntries","fieldsById","name","valueEntry","valueToProto","get","toArray","size","valueEntriesToProto","type","console","error","Enum","convertFrom","encodedMessage","decode","data","TextDecoder","convertedMessage","convertFunc","convertedKey","findConvertedKey","options","_ref5","_ref6","fieldDescriptor","values","generate","protoValue","valueFromProto","valueEntriesFromProto","defaultValueForField","valuesById","first","fromJS","LocalStorage","load","rawStoredProtos","localStorage","getItem","log","save","isEmpty","toJSON","removeItem","setItem","ProtoConvert","MessageBuilderScaffold","undefined","this","props","messageToBuild","react_default","a","createElement","Fragment","MessageBuilder_MessageFieldsBuilder","path","callbacks","MessageBuilder_Output","outputFormat","builtMessage","buildMessageUpToDate","React","Component","Output","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleExportToFile","onBuild","handleChangeOutputFormat","bind","assertThisInitialized","handleFileChange","handleImportFromFile","handleChangeBuiltMessage","event","onSetOutputFormat","target","file","files","self","reader","FileReader","onload","fileData","result","onImport","onerror","err","readAsArrayBuffer","refs","fileuploader","click","split","onChange","defaultValue","onClick","ref","hidden","cols","rows","className","disabled","MessageFieldsBuilder","_this2","slicedToArray","required","MessageBuilder_MessageFieldValuesBuilder","concat","MessageFieldValuesBuilder","onAdd","index","onDelete","set","onMove","_this3","showSet","showAdd","showDuplicate","showMove","enableMoveDown","enableMoveUp","handleDelete","handleDuplicate","handleMoveDown","handleMoveUp","MessageBuilder_MessageFieldInput","handleSet","MessageFieldInput","MessageBuilder_MessageTextInput","MessageBuilder_MessageBytesInput","MessageBuilder_MessageIntInput","MessageBuilder_MessageFloatInput","MessageBuilder_MessageBoolInput","MessageBuilder_MessageEnumInput","MessageTextInput","onSet","_this4","handleChange","MessageBytesInput","_this5","test","isValid","MessageIntInput","_this6","MessageFloatInput","_this7","MessageBoolInput","checked","_this8","MessageEnumInput","_this9","ProtoLibrary","fileDependencies","ProtoLibrary_ProtoRoot","protoRoot","ProtoLibrary_ProtoFiles","filenames","ProtoLibrary_ProtoInput","ProtoLibrary_ProtoUpload","ProtoRoot","ProtoLibrary_ProtoNamespace","namespace","ProtoNamespace","nested","namespaces","filter","Namespace","types","_namespaces$","subNamespaceName","subNamespace","_types$","subMessageName","subMessage","ProtoLibrary_ProtoMessage","onSelectMessageToBuild","buildable","_ref7","_ref8","ProtoMessage","ProtoFiles","filename","ProtoLibrary_ProtoFile","ProtoFile","handleClick","onRemoveProto","fileDependents","importingFiles","ProtoInput","state","isAdding","setState","fileName","protoContent","protoText","onAddProto","handleSubmit","handleStartAdding","ProtoUpload","text","readAsText","FileSaver","loadStoredProtos","isNode","fs","readFileSync","storedProto","Error","Root","keySeq","toList","loadSync","toJS","keepCase","flatMap","imports","importName","groupBy","importNameAndFilenames","toSet","resolveAll","Main","libraryCallbacks","handleAddProto","handleRemoveProto","handleSelectMessageToBuild","messageBuilderCallbacks","handleAddToMessage","handleDeleteFromMessage","handleSetInMessage","handleMoveInMessage","handleSetOutputFormat","handleBuildMessage","handleImportMessage","setIn","contents","_loadStoredProtos","delete","_loadStoredProtos2","messageBuildTimer","kind","extension","blob","Blob","saveAs","updateIn","arguments","scheduleBuildMessage","listPath","pop","listKey","last","messagePath","deleteIn","fromIndex","toIndex","list","movedEntry","insert","_loadStoredProtos3","prevProps","prevState","prevTimeout","clearTimeout","setTimeout","parent","MessageBuilder","fullMessageDescriptorName","view_ProtoLibrary","ReactDOM","render","view_Main","document","getElementById"],"mappings":"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","file":"static/js/main.a6a8b6c7.chunk.js","sourcesContent":["const { List, Map } = require('immutable');\r\nconst protobuf = require(\"protobufjs\");\r\nconst shortid = require('shortid');\r\n\r\nconst converters = {\r\n  'binary': ['Binary', 'pbdata', messageToBinary, messageFromBinary],\r\n  'binary-hex': ['Binary (hex)', 'pbdata.hex', messageToBinaryHex, messageFromBinaryHex],\r\n  'binary-b64': ['Binary (base64)', 'pbdata.b64', messageToBinaryBase64, messageFromBinaryBase64],\r\n  'json': ['Json', 'json', messageToJson, messageFromJson],\r\n  'json-camel': ['Json (camelCase)', 'cc.json', messageToJsonCamelCase, messageFromJsonCamelCase],\r\n  'json-id': ['Json (field-IDs)', 'ids.json', messageToJsonIds, messageFromJsonIds],\r\n};\r\n\r\nconst converterFormats = Object.keys(converters).sort();\r\n\r\nfunction converterName(format) {\r\n  return converters[format][0];\r\n}\r\n\r\nfunction converterExtension(format) {\r\n  return converters[format][1];\r\n}\r\n\r\nfunction convertTo(format, messageDescriptor, message) {\r\n  return converters[format][2](messageDescriptor, message);\r\n}\r\n\r\nfunction messageToBinary(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  return messageDescriptor.encode(protoMessage).finish();\r\n}\r\n\r\nfunction messageToBinaryHex(messageDescriptor, message) {\r\n  const binaryMessage = messageToBinary(messageDescriptor, message);\r\n  const hex = Array.from(binaryMessage).map((b) =>\r\n    ((b < 0x10) ? '0' : '') + b.toString(16)\r\n  );\r\n  return hex.join('').toUpperCase();\r\n}\r\n\r\nfunction messageToBinaryBase64(messageDescriptor, message) {\r\n  const binaryMessage = messageToBinary(messageDescriptor, message);\r\n  return protobuf.util.base64.encode(binaryMessage, 0, binaryMessage.length);\r\n}\r\n\r\nfunction messageToJson(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  return JSON.stringify(protoMessage);\r\n}\r\n\r\nfunction messageToJsonCamelCase(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  const camelCaseMessage = replaceFieldNames(\r\n    messageDescriptor,\r\n    messageDescriptor.toObject(protoMessage, protobuf.util.toJSONOptions),\r\n    (fieldName) => protobuf.util.camelCase(fieldName)\r\n  );\r\n  return JSON.stringify(camelCaseMessage);\r\n}\r\n\r\nfunction messageToJsonIds(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  const pbJsonMessage = replaceFieldNames(\r\n    messageDescriptor,\r\n    messageDescriptor.toObject(protoMessage, protobuf.util.toJSONOptions),\r\n    (fieldName, messageDescriptor) => messageDescriptor.fields[fieldName].id);\r\n  return JSON.stringify(pbJsonMessage);\r\n}\r\n\r\nfunction replaceFieldNames(messageDescriptor, protoMessage, replacementFunc) {\r\n  return Object.fromEntries(Object.entries(protoMessage).map(([k, v]) => {\r\n    const newName = replacementFunc(k, messageDescriptor);\r\n    const field = messageDescriptor.fields[k] || messageDescriptor.fields[newName];\r\n\r\n    if (field.resolvedType && field.resolvedType.constructor === protobuf.Type) {\r\n      if (field.repeated) {\r\n        return [\r\n          newName,\r\n          v.map((value) => replaceFieldNames(field.resolvedType, value, replacementFunc))\r\n        ];\r\n      } else {\r\n        return [newName, replaceFieldNames(field.resolvedType, v, replacementFunc)];\r\n      }\r\n    } else {\r\n      return [newName, v];\r\n    }\r\n  }));\r\n}\r\n\r\nfunction messageToProto(messageDescriptor, message) {\r\n  const messageObject = messageToProtoInternal(messageDescriptor, message);\r\n  return messageDescriptor.fromObject(messageObject);\r\n}\r\n\r\nfunction messageToProtoInternal(messageDescriptor, message) {\r\n  return message.mapEntries(([key, valueEntries]) => {\r\n    const field = messageDescriptor.fieldsById[key];\r\n    return [field.name, valueEntriesToProto(field, valueEntries)];\r\n  }).toObject();\r\n}\r\n\r\nfunction valueEntriesToProto(field, valueEntries) {\r\n  if (field.repeated) {\r\n    return valueEntries.map(valueEntry =>\r\n      valueToProto(field, valueEntry.get('value'))\r\n    ).toArray();\r\n  } else if (valueEntries.size === 1) {\r\n    return valueToProto(field, valueEntries.get(0).get('value'));\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction valueToProto(field, value) {\r\n  switch (field.type) {\r\n    case \"string\":\r\n    case \"bytes\":\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n    case \"bool\":\r\n      return value;\r\n    default:\r\n      break;\r\n  }\r\n  const resolvedType = field.resolvedType;\r\n  if (resolvedType === null) {\r\n    console.error(\"Unhandled value type\", field);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return value;\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return messageToProtoInternal(resolvedType, value);\r\n  }\r\n  console.error(\"Unhandled value type\", field);\r\n  return \"\";\r\n}\r\n\r\nfunction convertFrom(format, messageDescriptor, encodedMessage) {\r\n  return converters[format][3](messageDescriptor, encodedMessage);\r\n}\r\n\r\nfunction messageFromBinary(messageDescriptor, binaryMessage) {\r\n  const protoMessage = messageDescriptor.decode(binaryMessage);\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage, {binary: true});\r\n}\r\n\r\nfunction messageFromBinaryHex(messageDescriptor, hexMessage) {\r\n  const binaryMessageArray = []\r\n  for (var i = 0; i < hexMessage.length; i += 2) {\r\n    binaryMessageArray.push(parseInt(hexMessage.substring(i, i + 2), 16));\r\n  }\r\n  return messageFromBinary(messageDescriptor, new Uint8Array(binaryMessageArray));\r\n}\r\n\r\nfunction messageFromBinaryBase64(messageDescriptor, base64Message) {\r\n  const binaryMessage = window.atob(base64Message);\r\n  return messageFromBinary(messageDescriptor, binaryMessage);\r\n}\r\n\r\nfunction asUTF8(data) {\r\n  if (data instanceof Uint8Array) {\r\n    return new TextDecoder('utf-8').decode(data);\r\n  } else {\r\n    return data;\r\n  }\r\n}\r\n\r\nfunction messageFromJson(messageDescriptor, jsonMessage) {\r\n  const protoMessage = JSON.parse(asUTF8(jsonMessage));\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\r\n}\r\n\r\nfunction findConvertedKey(convertedKey, messageDescriptor, convertFunc) {\r\n  for (const key in messageDescriptor.fields) {\r\n    if (convertFunc(key, messageDescriptor).toString() === convertedKey) {\r\n      return key;\r\n    }\r\n  }\r\n  console.error('Failed to match key');\r\n  for (const key in messageDescriptor.fields) {\r\n    console.error('tried', convertFunc(key, messageDescriptor), '===', convertedKey);\r\n  }\r\n  console.error('all false.')\r\n}\r\n\r\nfunction reverseReplaceFieldNames(\r\n  messageDescriptor, convertedMessage, convertFunc) {\r\n    return replaceFieldNames(\r\n      messageDescriptor,\r\n      convertedMessage,\r\n      (convertedKey, messageDescriptor) => findConvertedKey(\r\n        convertedKey, messageDescriptor, convertFunc)\r\n    );\r\n  }\r\n\r\nfunction messageFromJsonCamelCase(messageDescriptor, jsonCamelCaseMessage) {\r\n  const camelCaseMessage = JSON.parse(asUTF8(jsonCamelCaseMessage));\r\n  const protoMessage = reverseReplaceFieldNames(\r\n    messageDescriptor,\r\n    camelCaseMessage,\r\n    (camelCaseFieldName) => {\r\n      return protobuf.util.camelCase(camelCaseFieldName)\r\n    }\r\n  );\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\r\n}\r\n\r\nfunction messageFromJsonIds(messageDescriptor, jsonIdsMessage) {\r\n  const idsMessage = JSON.parse(asUTF8(jsonIdsMessage));\r\n  const protoMessage = reverseReplaceFieldNames(\r\n    messageDescriptor,\r\n    idsMessage,\r\n    (fieldId, messageDescriptor) => messageDescriptor.fields[fieldId].id\r\n  );\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\r\n}\r\n\r\nfunction messageFromProtoMessage(messageDescriptor, protoMessage, options) {\r\n  return Map(Object.entries(protoMessage).map(([key, value]) => {\r\n    const fieldDescriptor = messageDescriptor.fields[key];\r\n    return [fieldDescriptor.id, valueEntriesFromProto(fieldDescriptor, value, options)];\r\n  }));\r\n}\r\n\r\nfunction valueEntriesFromProto(fieldDescriptor, value, options) {\r\n  const values = fieldDescriptor.repeated ? value : [value];\r\n  return List(\r\n    values.map(v => (Map({\r\n      id: shortid.generate(),\r\n      value: valueFromProto(fieldDescriptor, v, options)\r\n    })))\r\n  );\r\n}\r\n\r\nfunction valueFromProto(fieldDescriptor, protoValue, options) {\r\n  switch (fieldDescriptor.type) {\r\n    case \"bytes\":\r\n    const binary = options && options.binary;\r\n      return (binary\r\n        ? protobuf.util.base64.encode(protoValue, 0, protoValue.length)\r\n        : protoValue\r\n      );\r\n\r\n    case \"string\":\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n    case \"bool\":\r\n      return protoValue;\r\n    default:\r\n      break;\r\n  }\r\n  const resolvedType = fieldDescriptor.resolvedType;\r\n  if (resolvedType === null) {\r\n    console.error(\"Unhandled value type\", fieldDescriptor);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return protoValue;\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return messageFromProtoMessage(resolvedType, protoValue, options);\r\n  }\r\n  console.error(\"Unhandled value type\", fieldDescriptor);\r\n  return \"\";\r\n}\r\n\r\nfunction defaultValueForField(field) {\r\n  switch (field.type) {\r\n    case \"string\":\r\n    case \"bytes\":\r\n      return \"\";\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n      return \"0\"\r\n    case \"bool\":\r\n      return false;\r\n    default:\r\n      break;\r\n  }\r\n  const resolvedType = field.resolvedType;\r\n  if (resolvedType === null) {\r\n    console.error(\"Unhandled default type, expected resolved type\", field);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return parseInt(List(Object.keys(resolvedType.valuesById)).sort().first(), 10);\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return Map();\r\n  }\r\n  console.error(\"Unhandled default type\", field);\r\n  return \"\";\r\n}\r\n\r\nexport {\r\n  converterFormats,\r\n  converterName,\r\n  converterExtension,\r\n  convertTo,\r\n  convertFrom,\r\n  defaultValueForField,\r\n  messageToProto\r\n};\r\n","const { fromJS } = require('immutable');\r\n\r\nconst protos = {\r\n  load: () => {\r\n    const rawStoredProtos = fromJS(JSON.parse(window.localStorage.getItem('stored_protos') || \"{}\"));\r\n    console.log('rawStoredProtos', rawStoredProtos);\r\n    return rawStoredProtos;\r\n  },\r\n  save: rawStoredProtos => {\r\n    if (rawStoredProtos.isEmpty()) {\r\n      console.log('REMOVING:', rawStoredProtos.toJSON());\r\n      window.localStorage.removeItem('stored_protos');\r\n    } else {\r\n      console.log('SAVING:', rawStoredProtos.toJSON());\r\n      window.localStorage.setItem('stored_protos', JSON.stringify(rawStoredProtos.toJSON()));\r\n    }\r\n  }\r\n};\r\n\r\nconst format = {\r\n  load: () => {\r\n    return window.localStorage.getItem('format') || 'binary';\r\n  },\r\n  save: format => {\r\n    if (format === 'binary') {\r\n      window.localStorage.removeItem('format');\r\n    } else {\r\n      window.localStorage.setItem('format', format);\r\n    }\r\n  }\r\n}\r\n\r\nexport default {protos, format};\r\n","import React from 'react';\r\nconst protobuf = require(\"protobufjs\");\r\nconst shortid = require('shortid');\r\nconst ProtoConvert = require('../ProtoConvert')\r\n\r\nconst { List, Map } = require('immutable');\r\n\r\nclass MessageBuilderScaffold extends React.Component {\r\n  render() {\r\n    if (this.props.messageToBuild === undefined) {\r\n      return null;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          {this.props.messageToBuild.name} builder\r\n        </h1>\r\n        <MessageFieldsBuilder\r\n          path={List()}\r\n          fields={this.props.messageToBuild.fields}\r\n          values={this.props.message}\r\n          callbacks={this.props.callbacks} />\r\n        <Output\r\n          messageToBuild={this.props.messageToBuild}\r\n          outputFormat={this.props.outputFormat}\r\n          builtMessage={this.props.builtMessage}\r\n          buildMessageUpToDate={this.props.buildMessageUpToDate}\r\n          callbacks={this.props.callbacks} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Output extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleExportToFile = () => this.props.callbacks.onBuild('save');\r\n    this.handleChangeOutputFormat = this.handleChangeOutputFormat.bind(this);\r\n    this.handleFileChange = this.handleFileChange.bind(this);\r\n    this.handleImportFromFile = this.handleImportFromFile.bind(this);\r\n    this.handleChangeBuiltMessage = this.handleChangeBuiltMessage.bind(this);\r\n  }\r\n\r\n  handleChangeOutputFormat(event) {\r\n    this.props.callbacks.onSetOutputFormat(event.target.value);\r\n  }\r\n\r\n  handleFileChange(event) {\r\n    const file = event.target.files[0];\r\n    const self = this;\r\n    const reader = new FileReader();\r\n    reader.onload = function() {\r\n      const fileData = new Uint8Array(reader.result);\r\n      self.props.callbacks.onImport(fileData);\r\n    };\r\n    reader.onerror = function(err) {\r\n      console.log('FileLoading of', file, 'failed:', err);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  }\r\n\r\n  handleImportFromFile() {\r\n    this.refs.fileuploader.click();\r\n  }\r\n\r\n  handleChangeBuiltMessage(event) {\r\n    const value = this.props.outputFormat === 'binary' ? new Uint8Array(event.target.value.split(',')) : event.target.value;\r\n    this.props.callbacks.onImport(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        Format:\r\n        <select\r\n          onChange={this.handleChangeOutputFormat}\r\n          defaultValue={this.props.outputFormat}>\r\n          {ProtoConvert.converterFormats.map(key =>\r\n            <option key={key} value={key}>\r\n              {ProtoConvert.converterName(key)}\r\n            </option>\r\n          )}\r\n        </select>\r\n        <br />\r\n        import\r\n        <button onClick={this.handleImportFromFile}>Load from file</button>\r\n        <input\r\n          type=\"file\"\r\n          ref=\"fileuploader\"\r\n          onChange={this.handleFileChange}\r\n          hidden />\r\n        <br />\r\n        export\r\n        <button onClick={this.handleExportToFile}> Save as file </button>\r\n        <br/>\r\n        <textarea\r\n          value={this.props.builtMessage[0] !== null ? this.props.builtMessage[0] : this.props.builtMessage[1]}\r\n          cols=\"200\"\r\n          rows=\"3\"\r\n          className={this.props.builtMessage[0] === null ? \"invalid\" : \"\"}\r\n          disabled={!this.props.buildMessageUpToDate}\r\n          onChange={this.handleChangeBuiltMessage} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldsBuilder extends React.Component {\r\n  render() {\r\n    return (\r\n      <ol>\r\n        {Object.entries(this.props.fields)\r\n         .map(\r\n          ([fieldName, field]) =>\r\n            <li key={fieldName} value={field.id}>\r\n              <b>{field.type}{field.repeated ? \"*\" : \"\"}{field.required ? \"!\" : \"\"}</b> - {field.name}\r\n              <MessageFieldValuesBuilder\r\n                path={this.props.path.concat([field.id])}\r\n                field={field}\r\n                valueEntries={this.props.values.get(field.id) || List()}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n        )}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldValuesBuilder extends React.Component{\r\n  handleSet() {\r\n    this.props.callbacks.onAdd(\r\n      this.props.path,\r\n      Map({\r\n        'id': shortid.generate(),\r\n        'value': ProtoConvert.defaultValueForField(this.props.field)\r\n      }));\r\n  }\r\n\r\n  handleDelete(index) {\r\n    this.props.callbacks.onDelete(this.props.path.concat([index]))\r\n  }\r\n\r\n  handleDuplicate(valueEntry) {\r\n    this.props.callbacks.onAdd(\r\n      this.props.path,\r\n      valueEntry.set('id', shortid.generate())\r\n    );\r\n  }\r\n\r\n  handleMoveUp(index) {\r\n    this.props.callbacks.onMove(this.props.path, index, index - 1);\r\n  }\r\n\r\n  handleMoveDown(index) {\r\n    this.props.callbacks.onMove(this.props.path, index, index + 1);\r\n  }\r\n\r\n  render() {\r\n    const showSet = this.props.valueEntries.size === 0;\r\n    const showAdd = this.props.field.repeated;\r\n    const showDuplicate = this.props.field.repeated;\r\n    const showMove = this.props.field.repeated;\r\n\r\n    return (\r\n      <ul>\r\n        {this.props.valueEntries.map((valueEntry, index) => {\r\n          const enableMoveDown = index !== this.props.valueEntries.size - 1;\r\n          const enableMoveUp = index !== 0;\r\n          return <li key={valueEntry.get('id')} >\r\n            <button onClick={() => this.handleDelete(index)} className=\"tiny\"> - </button>\r\n            <button\r\n              onClick={() => this.handleDuplicate(valueEntry)}\r\n              hidden={!showDuplicate}\r\n              className=\"tiny\">\r\n              *\r\n            </button>\r\n            <button\r\n              onClick={() => this.handleMoveDown(index)}\r\n              hidden={!showMove}\r\n              disabled={!enableMoveDown}\r\n              className=\"tiny\">\r\n              v\r\n            </button>\r\n            <button\r\n              onClick={() => this.handleMoveUp(index)}\r\n              hidden={!showMove}\r\n              disabled={!enableMoveUp}\r\n              className=\"tiny\">\r\n              ^\r\n            </button>\r\n            <MessageFieldInput\r\n              path={this.props.path.concat([index, 'value'])}\r\n              field={this.props.field}\r\n              value={valueEntry.get('value')}\r\n              callbacks={this.props.callbacks} />\r\n          </li>\r\n        })}\r\n        {(showAdd || showSet) &&\r\n          <li>\r\n            <button onClick={() => this.handleSet()}> {(showAdd) ? 'add' : 'set'} </button>\r\n          </li>\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldInput extends React.Component {\r\n  render() {\r\n    const fieldType = this.props.field.type;\r\n    switch (fieldType) {\r\n      case \"string\":\r\n        return <MessageTextInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"bytes\":\r\n        return <MessageBytesInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"int32\":\r\n      case \"int64\":\r\n      case \"sint32\":\r\n      case \"sint64\":\r\n      case \"uint32\":\r\n      case \"uint64\":\r\n      case \"fixed32\":\r\n      case \"fixed64\":\r\n        return <MessageIntInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"float\":\r\n      case \"double\":\r\n        return <MessageFloatInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"bool\":\r\n        return <MessageBoolInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      default:\r\n        break;\r\n    }\r\n    const resolvedType = this.props.field.resolvedType;\r\n    if (resolvedType.constructor === protobuf.Enum) {\r\n      return <MessageEnumInput\r\n        path={this.props.path}\r\n        field={this.props.field}\r\n        type={resolvedType}\r\n        value={this.props.value}\r\n        callbacks={this.props.callbacks} />\r\n    } else if (resolvedType.constructor === protobuf.Type) {\r\n      return <MessageFieldsBuilder\r\n        path={this.props.path}\r\n        fields={resolvedType.fields}\r\n        values={this.props.value}\r\n        callbacks={this.props.callbacks} />\r\n    }\r\n    console.log(\"Unhandled input type\", this.props.field.type);\r\n    return <div/>\r\n  }\r\n}\r\n\r\nclass MessageTextInput extends React.Component {\r\n  handleChange(event) {\r\n    // console.log('MessageTextInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return <textarea onChange={(event) => this.handleChange(event)} value={this.props.value} />\r\n  }\r\n}\r\n\r\nclass MessageBytesInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = (event) => this.handleChange(event);\r\n  }\r\n\r\n  isValid() {\r\n    return protobuf.util.base64.test(this.props.value);\r\n  }\r\n\r\n  handleChange(event) {\r\n    // console.log(\"MessageBytesInput change\", this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const isValid = this.isValid();\r\n    return (\r\n      <textarea\r\n        onChange={this.onChange}\r\n        value={this.props.value}\r\n        className={isValid ? \"\" : \"invalid\"} />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass MessageIntInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  isValid() {\r\n    return /^[0-9]+$/.test(this.props.value);\r\n  }\r\n\r\n  handleChange(event) {\r\n    // console.log('MessageIntInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const isValid = this.isValid();\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        onChange={this.onChange}\r\n        value={this.props.value}\r\n        className={isValid ? \"\" : \"invalid\"} />\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFloatInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  isValid() {\r\n    return /^[0-9]+$|^[0-9]+[.][0-9]*$|^[0-9]*[.][0-9]+$/.test(this.props.value);\r\n  }\r\n\r\n  handleChange(event) {\r\n    // console.log('MessageFloatInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const isValid = this.isValid();\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        onChange={this.onChange}\r\n        value={this.props.value}\r\n        className={isValid ? \"\" : \"invalid\"} />\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageBoolInput extends React.Component {\r\n  handleChange(event) {\r\n    console.log('MessageBoolInput', this.props.path, event.target.checked);\r\n    this.props.callbacks.onSet(this.props.path, event.target.checked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={this.props.value}\r\n        onChange={(event) => this.handleChange(event)} />\r\n    )\r\n  }\r\n}\r\n\r\nclass MessageEnumInput extends React.Component {\r\n  handleChange(event) {\r\n    const value = parseInt(event.target.value);\r\n    console.log('MessageEnumInput.change', this.props.path, typeof(value), value);\r\n    this.props.callbacks.onSet(this.props.path, value);\r\n  }\r\n\r\n  render() {\r\n    const keys = List(Object.keys(this.props.type.valuesById)).sort();\r\n    return (\r\n      <select defaultValue={this.props.value} onChange={(event) => this.handleChange(event)}>\r\n        {keys.map(key => (\r\n          <option value={key} key={key}>\r\n            {this.props.type.valuesById[key]} = {key}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessageBuilderScaffold;\r\n","import React from 'react';\r\nconst protobuf = require(\"protobufjs\");\r\nconst { List } = require('immutable');\r\n\r\nclass ProtoLibrary extends React.Component {\r\n  render() {\r\n    console.log('ProtoLibrary', this.props.fileDependencies);\r\n    return (\r\n      <React.Fragment>\r\n        <h2>\r\n          Known namespaces and messages\r\n        </h2>\r\n        <ProtoRoot\r\n          protoRoot={this.props.protoRoot}\r\n          callbacks={this.props.callbacks} />\r\n        <h2>\r\n          Known files\r\n        </h2>\r\n        <ProtoFiles\r\n          filenames={this.props.filenames}\r\n          fileDependencies={this.props.fileDependencies}\r\n          callbacks={this.props.callbacks} />\r\n        <ProtoInput callbacks={this.props.callbacks} />\r\n        <ProtoUpload callbacks={this.props.callbacks} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoRoot extends React.Component {\r\n  render() {\r\n    if (!this.props.protoRoot) {\r\n      return <React.Fragment />;\r\n    }\r\n    return <ProtoNamespace\r\n      name={''}\r\n      namespace={this.props.protoRoot}\r\n      callbacks={this.props.callbacks} />\r\n  }\r\n}\r\n\r\nclass ProtoNamespace extends React.Component {\r\n  render() {\r\n    const nested = this.props.namespace.nested || {};\r\n    const entries = Object.entries(nested);\r\n    const namespaces = entries.filter(([k, v]) => v.constructor === protobuf.Namespace);\r\n    const types = entries.filter(([k, v]) => v.constructor === protobuf.Type);\r\n\r\n    if (namespaces.length === 1 && types.length === 0) {\r\n      const [subNamespaceName, subNamespace] = namespaces[0];\r\n      return <ProtoNamespace\r\n        name={this.props.name + '.' + subNamespaceName}\r\n        namespace={subNamespace}\r\n        callbacks={this.props.callbacks} />\r\n    } else if (namespaces.length === 0 && types.length === 1) {\r\n      const [subMessageName, subMessage] = types[0];\r\n      return <ProtoMessage\r\n        name={this.props.name + '.' + subMessageName}\r\n        message={subMessage}\r\n        callbacks={this.props.callbacks} />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.name}\r\n        <button\r\n          onClick={() => this.props.callbacks.onSelectMessageToBuild(this.props.namespace)}\r\n          hidden={!this.props.buildable}>\r\n          build\r\n        </button>\r\n        <ul>\r\n          {namespaces.map(([k ,v]) =>\r\n            <li key={k} >\r\n              <ProtoNamespace\r\n                name={k}\r\n                namespace={v}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n          )}\r\n          {types.map(([k, v]) =>\r\n            <li key={k}>\r\n              <ProtoMessage\r\n                name={k}\r\n                message={v}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n           )}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoMessage extends React.Component {\r\n render() {\r\n   return (\r\n    <ProtoNamespace\r\n      name={this.props.name}\r\n      namespace={this.props.message}\r\n      buildable={true}\r\n      callbacks={this.props.callbacks} />);\r\n  }\r\n}\r\n\r\nclass ProtoFiles extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {\r\n          this.props.filenames.sort().map(\r\n            filename =>\r\n              <li key={filename}>\r\n                <ProtoFile\r\n                  filename={filename}\r\n                  fileDependencies={this.props.fileDependencies}\r\n                  callbacks={this.props.callbacks} />\r\n              </li>\r\n          )\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoFile extends React.Component {\r\n  handleClick = () => {\r\n    console.log('ProtoFile.click', this);\r\n    this.props.callbacks.onRemoveProto(this.props.filename);\r\n  }\r\n\r\n  render() {\r\n    const fileDependents = this.props.fileDependencies.get(this.props.filename, List());\r\n\r\n    const importingFiles = (fileDependents.isEmpty()\r\n      ? <React.Fragment />\r\n      : <ProtoFiles\r\n          filenames={fileDependents}\r\n          fileDependencies={this.props.fileDependencies}\r\n          callbacks={this.props.callbacks}/>);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          onClick={this.handleClick}\r\n          disabled={!fileDependents.isEmpty()}\r\n          className=\"tiny\">\r\n           -\r\n        </button>\r\n        {this.props.filename}\r\n        {importingFiles}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdding: false\r\n    }\r\n  }\r\n\r\n  handleStartAdding() {\r\n    this.setState({isAdding: true});\r\n  }\r\n\r\n  handleSubmit() {\r\n    const fileName = this.refs.fileName.value;\r\n    const protoContent = this.refs.protoText.value;\r\n    this.setState({isAdding: false});\r\n    this.props.callbacks.onAddProto(fileName, protoContent);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isAdding) {\r\n      return <button onClick={() => this.handleStartAdding()} > Add </button>\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        File name: <input type=\"text\" ref=\"fileName\" /> <br />\r\n        ProtoContent: <br />\r\n        <textarea ref=\"protoText\"/> <br />\r\n        <button onClick={() => this.handleSubmit()} > Submit </button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nclass ProtoUpload extends React.Component {\r\n  handleFileChange(event) {\r\n    const file = event.target.files[0];\r\n    const self = this;\r\n    const reader = new FileReader();\r\n    reader.onload = function() {\r\n      const text = reader.result;\r\n      self.props.callbacks.onAddProto(file.name, text);\r\n    };\r\n    reader.onerror = function(err) {\r\n      console.log('FileLoading of', file, 'failed:', err);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={() => this.refs.fileuploader.click()}>\r\n          From disk\r\n        </button>\r\n        <input\r\n          type=\"file\"\r\n          ref=\"fileuploader\"\r\n          onChange={(event) => this.handleFileChange(event)}\r\n          hidden />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtoLibrary;\r\n","import React from 'react';\r\nimport LocalStorage from '../LocalStorage'\r\nimport MessageBuilderScaffold from './MessageBuilder';\r\nimport ProtoLibrary from './ProtoLibrary';\r\nconst ProtoConvert = require('../ProtoConvert')\r\nconst protobuf = require(\"protobufjs\");\r\nconst FileSaver = require(\"file-saver\");\r\nconst { List, Map } = require('immutable');\r\n\r\nfunction loadStoredProtos(rawStoredProtos) {\r\n  // Cheat a bit so that we can load files synchronously\r\n  protobuf.util.isNode = true;\r\n  protobuf.util.fs = {\r\n    readFileSync: (filename) => {\r\n      const storedProto = rawStoredProtos.get(filename);\r\n      if (storedProto === undefined) {\r\n        throw new Error('Needed to load unknown file: ' + filename);\r\n      }\r\n      return storedProto.get('contents');\r\n    }\r\n  };\r\n\r\n  const protoRoot = new protobuf.Root();\r\n  const filenames = rawStoredProtos.keySeq().toList();\r\n  protoRoot.loadSync(filenames.toJS(), { keepCase: true });\r\n\r\n  const importEntries = List(filenames.flatMap(filename => {\r\n    const imports = protobuf.parse(\r\n      rawStoredProtos.get(filename).get('contents')\r\n    ).imports || [];\r\n    return imports.map(importName => [importName, filename]);\r\n  }));\r\n  const groupedEntries = importEntries\r\n    .groupBy(([importName, filename]) => importName)\r\n  const mappedEntries = groupedEntries\r\n    .map(importNameAndFilenames => {\r\n      const filenames = importNameAndFilenames.map(([importName, filename]) => filename);\r\n      const filenameSet = filenames.toSet();\r\n      return filenameSet;\r\n    });\r\n  const fileDependencies = mappedEntries;\r\n\r\n  protoRoot.resolveAll();\r\n\r\n  return {protoRoot, fileDependencies};\r\n}\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rawStoredProtos: Map(),\r\n      protoRoot: null,\r\n      fileDependencies: Map(),\r\n      message: Map(),\r\n      outputFormat: 'binary',\r\n      builtMessage: ['', null],\r\n    }\r\n    this.libraryCallbacks = {\r\n      onAddProto: this.handleAddProto.bind(this),\r\n      onRemoveProto: this.handleRemoveProto.bind(this),\r\n      onSelectMessageToBuild: this.handleSelectMessageToBuild.bind(this),\r\n    };\r\n    this.messageBuilderCallbacks = {\r\n      onAdd: this.handleAddToMessage.bind(this),\r\n      onDelete: this.handleDeleteFromMessage.bind(this),\r\n      onSet: this.handleSetInMessage.bind(this),\r\n      onMove: this.handleMoveInMessage.bind(this),\r\n      onSetOutputFormat: this.handleSetOutputFormat.bind(this),\r\n      onBuild: this.handleBuildMessage.bind(this),\r\n      onImport: this.handleImportMessage.bind(this),\r\n    };\r\n  }\r\n\r\n  handleAddProto(fileName, protoContent) {\r\n    this.setState((state) => {\r\n      const rawStoredProtos = state.rawStoredProtos.setIn([fileName], Map({contents: protoContent}));\r\n      const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\r\n      return {rawStoredProtos, protoRoot, fileDependencies};\r\n    });\r\n  }\r\n\r\n  handleRemoveProto(fileName) {\r\n    // console.log('handleRemoveProto', this.state.rawStoredProtos.toString());\r\n    this.setState((state) => {\r\n      const rawStoredProtos = state.rawStoredProtos.delete(fileName);\r\n      const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\r\n      return {rawStoredProtos, protoRoot, fileDependencies};\r\n    });\r\n  }\r\n\r\n  handleSelectMessageToBuild(messageToBuild) {\r\n    this.setState({\r\n      messageToBuild,\r\n      message: Map(),\r\n      builtMessage: ['', null],\r\n      messageBuildTimer: null,\r\n    });\r\n  }\r\n\r\n  handleSetOutputFormat(outputFormat) {\r\n    this.setState({\r\n      outputFormat,\r\n      builtMessage: [\r\n        ProtoConvert.convertTo(\r\n          outputFormat,\r\n          this.state.messageToBuild,\r\n          this.state.message),\r\n        null\r\n      ],\r\n      messageBuildTimer: null,\r\n    });\r\n  }\r\n\r\n  handleBuildMessage(kind) {\r\n    console.log('Will', kind, 'as', this.state.outputFormat);\r\n\r\n    const data = ProtoConvert.convertTo(\r\n      this.state.outputFormat,\r\n      this.state.messageToBuild,\r\n      this.state.message);\r\n    // console.log('data', data);\r\n    console.log('handleBuildMessage', this.refs);\r\n\r\n    if (kind === 'save') {\r\n      const extension = ProtoConvert.converterExtension(this.state.outputFormat);\r\n      const blob = new Blob([data], {type: 'application/octet-stream'});\r\n      FileSaver.saveAs(blob, this.state.messageToBuild.name + '.' + extension);\r\n    } else {\r\n      console.log('Unhandled build kind:', kind);\r\n    }\r\n  }\r\n\r\n  handleImportMessage(data) {\r\n    console.log('Import', data.length, 'bytes as', this.state.outputFormat);\r\n    const message = ProtoConvert.convertFrom(\r\n      this.state.outputFormat,\r\n      this.state.messageToBuild,\r\n      data\r\n    );\r\n    this.setState({\r\n      message,\r\n      builtMessage: [\r\n        ProtoConvert.convertTo(\r\n          this.state.outputFormat,\r\n          this.state.messageToBuild,\r\n          message),\r\n        null\r\n      ],\r\n      messageBuildTimer: null,\r\n    });\r\n  }\r\n\r\n  handleAddToMessage(path, valueEntry) {\r\n    // console.log('handleAddToMessage', this.state.message, path.toString(), valueEntry);\r\n    this.setState((state) => ({\r\n      message: state.message.updateIn(\r\n        path,\r\n        (list = List()) => list.push(valueEntry)\r\n      ),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  handleDeleteFromMessage(path) {\r\n    // console.log('handleDeleteFromMessage', this.state.message, path.toString());\r\n    this.setState((state) => {\r\n      const listPath = path.pop();\r\n      const listKey = listPath.last();\r\n      const messagePath = listPath.pop()\r\n      const messageWithDeletedListEntry = state.message.deleteIn(path);\r\n      // Delete the whole list if the last entry is removed\r\n      const newMessage = messageWithDeletedListEntry.updateIn(\r\n        messagePath,\r\n        message => (\r\n          message.get(listKey).isEmpty()\r\n          ? message.delete(listKey)\r\n          : message));\r\n      return {\r\n        message: newMessage,\r\n        messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n      };\r\n    });\r\n  }\r\n\r\n  handleSetInMessage(path, valueEntry) {\r\n    // console.log('handleSetInMessage', this.state.message, path.toString(), valueEntry);\r\n    this.setState((state) => ({\r\n      message: state.message.setIn(path, valueEntry),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  handleMoveInMessage(path, fromIndex, toIndex) {\r\n    this.setState((state) => ({\r\n      message: state.message.updateIn(\r\n        path,\r\n        (list = List()) => {\r\n          const movedEntry = list.get(fromIndex);\r\n          return list.delete(fromIndex).insert(toIndex, movedEntry);\r\n        }\r\n      ),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rawStoredProtos = LocalStorage.protos.load();\r\n    const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\r\n    const format = LocalStorage.format.load();\r\n\r\n    this.setState({\r\n      rawStoredProtos,\r\n      protoRoot,\r\n      fileDependencies,\r\n      outputFormat: format,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.rawStoredProtos !== this.state.rawStoredProtos) {\r\n      LocalStorage.protos.save(this.state.rawStoredProtos);\r\n    }\r\n    if (prevState.outputFormat !== this.state.outputFormat) {\r\n      LocalStorage.format.save(this.state.outputFormat);\r\n    }\r\n  }\r\n\r\n  scheduleBuildMessage(prevTimeout) {\r\n    clearTimeout(prevTimeout);\r\n    return setTimeout(() =>\r\n      this.setState((state) => {\r\n        try {\r\n          return {\r\n            builtMessage: [\r\n              ProtoConvert.convertTo(\r\n                state.outputFormat,\r\n                state.messageToBuild,\r\n                state.message),\r\n                null\r\n            ],\r\n            messageBuildTimer: null,\r\n          };\r\n        } catch (err) {\r\n          return {\r\n            builtMessage: [null, err],\r\n            messageBuildTimer: null,\r\n          }\r\n        }\r\n      }),\r\n      500\r\n    );\r\n  }\r\n\r\n  fullMessageDescriptorName(messageDescriptor) {\r\n    if (!messageDescriptor) {\r\n      return \"\";\r\n    }\r\n    var name = messageDescriptor.name;\r\n    while (messageDescriptor.parent && messageDescriptor.parent.name) {\r\n      name = messageDescriptor.parent.name + '.' + name;\r\n      messageDescriptor = messageDescriptor.parent;\r\n    }\r\n    name = messageDescriptor.filename + ':' + name;\r\n    return name;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"protool\">\r\n        <div className=\"message-builder\">\r\n          <MessageBuilderScaffold\r\n            key={this.fullMessageDescriptorName(this.state.messageToBuild)}\r\n            messageToBuild={this.state.messageToBuild}\r\n            message={this.state.message}\r\n            outputFormat={this.state.outputFormat}\r\n            builtMessage={this.state.builtMessage}\r\n            buildMessageUpToDate={this.state.messageBuildTimer === null}\r\n            callbacks={this.messageBuilderCallbacks} />\r\n        </div>\r\n        <div className=\"proto-library\">\r\n          <ProtoLibrary\r\n            filenames={this.state.rawStoredProtos.keySeq().toList()}\r\n            fileDependencies={this.state.fileDependencies}\r\n            protoRoot={this.state.protoRoot}\r\n            callbacks={this.libraryCallbacks} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './view/Main';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Main />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}