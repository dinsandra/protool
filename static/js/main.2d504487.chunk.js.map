{"version":3,"sources":["ProtoConvert.js","LocalStorage.js","view/MessageBuilder.js","view/ProtoLibrary.js","view/Main.js","index.js"],"names":["require","List","_require","Map","protobuf","shortid","objectFromEntries","entries","o","i","length","_entries$i","Object","_Users_sandra_private_devel_js_protool_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","k","v","converters","binary","messageToBinary","messageFromBinary","binary-hex","messageDescriptor","message","binaryMessage","Array","from","map","b","toString","join","toUpperCase","hexMessage","binaryMessageArray","push","parseInt","substring","Uint8Array","binary-b64","util","base64","encode","base64Message","raw","window","atob","ArrayBuffer","charCodeAt","json","protoMessage","messageToProto","JSON","stringify","jsonMessage","fromObject","parse","asUTF8","messageFromProtoMessage","json-camel","camelCaseMessage","replaceFieldNames","toObject","toJSONOptions","fieldName","camelCase","jsonCamelCaseMessage","reverseReplaceFieldNames","camelCaseFieldName","json-id","pbJsonMessage","fields","id","jsonIdsMessage","idsMessage","fieldId","converterFormats","keys","sort","converterName","format","converterExtension","convertTo","finish","replacementFunc","_ref","_ref2","newName","fieldDescriptor","resolvedType","constructor","Type","repeated","value","messageObject","messageToProtoInternal","mapEntries","_ref3","_ref4","key","valueEntries","fieldsById","name","valueEntriesToProto","valueEntry","valueToProto","keyType","get","type","toArray","size","fieldType","console","error","Enum","convertFrom","encodedMessage","decode","data","TextDecoder","convertedMessage","convertFunc","convertedKey","findConvertedKey","options","_ref5","_ref6","valueEntriesFromProto","_ref7","_ref8","generate","valueFromProto","values","protoValue","defaultValueEntryForField","valueObject","defaultValueForFieldType","valuesById","first","fullMessageDescriptorName","parent","fromJS","isKeyed","tryParseToInt","test","reviver","slicedToArray","toMap","toList","loadJson","keyName","localStorage","getItem","log","saveJson","isEmpty","removeItem","setItem","toJSON","LocalStorage","load","save","rawStoredProtos","messages","config","ProtoConvert","MessageBuilder_require","MessageBuilderScaffold","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleSelectMessage","props","callbacks","onSet","inherits","createClass","undefined","path","react_default","a","createElement","Fragment","className","MessageBuilder_StoreMessageButton","MessageBuilder_StoredMessageSelector","storedMessages","shouldSet","onSelectMessage","MessageBuilder_MessageFieldsBuilder","MessageBuilder_Output","builtMessage","buildMessageUpToDate","React","Component","StoredMessageSelector","_React$Component2","_getPrototypeOf3","_this2","_len2","_key2","event","target","getIn","onChange","keySeq","Output","_React$Component3","_getPrototypeOf4","_this3","_len3","_key3","handleExportToFile","onExport","handleChangeFormat","onSetFormat","handleFileChange","file","files","reader","FileReader","onload","fileData","result","onImport","onerror","err","readAsArrayBuffer","handleImportFromFile","refs","fileuploader","click","handleChangeBuiltMessage","split","defaultValue","onClick","ref","hidden","errorMessage","renderControls","disabled","StoreMessageButton","_React$Component4","_this4","handleStartStoring","setState","isStoring","handleCommitStore","storeName","onStore","handleDiscardStore","state","MessageFieldsBuilder","_React$Component5","_getPrototypeOf5","_this5","_len4","_key4","isRegularField","partOf","fieldTypeName","required","_this6","regularFieldDescriptors","filter","oneOfDescriptors","oneofs","regularFieldItems","MessageBuilder_MessageFieldValuesBuilder","oneOfItems","oneOfDescriptor","MessageBuilder_MessageOneOfFieldValuesBuilder","MessageFieldValuesBuilder","_React$Component6","_this7","messageFieldValueBuilders","index","MessageBuilder_MessageFieldValueBuilder","numEntries","MessageBuilder_MessageFieldValuesAddControls","numValueEntries","MessageFieldValuesAddControls","_React$Component7","_getPrototypeOf6","_this8","_len5","_key5","handleSet","onAdd","showSet","showAdd","MessageFieldValueBuilder","_React$Component8","_getPrototypeOf7","_this9","_len6","_key6","handleDelete","onDelete","handleDuplicate","set","handleMoveUp","onMove","handleMoveDown","showDelete","showDuplicate","showMove","enableMoveDown","enableMoveUp","MessageBuilder_MessageFieldInput","MessageOneOfFieldValuesBuilder","_React$Component9","_getPrototypeOf8","_this10","_len7","_key7","currentFieldDescriptor","maybeCurrentFieldId","find","newFieldId","newFieldDescriptor","maybeCurrentFieldDescriptor","fieldsArray","MessageFieldInput","_React$Component10","MessageBuilder_MessageTextInput","MessageBuilder_MessageBytesInput","MessageBuilder_MessageIntInput","MessageBuilder_MessageFloatInput","MessageBuilder_MessageBoolInput","MessageBuilder_MessageEnumInput","MessageTextInput","_React$Component11","_getPrototypeOf9","_this11","_len8","_key8","handleChange","MessageBytesInput","_React$Component12","_getPrototypeOf10","_this12","_len9","_key9","isValid","MessageIntInput","_React$Component13","_getPrototypeOf11","_this13","_len10","_key10","MessageFloatInput","_React$Component14","_getPrototypeOf12","_this14","_len11","_key11","MessageBoolInput","_React$Component15","_getPrototypeOf13","_this15","_len12","_key12","checked","MessageEnumInput","_React$Component16","_getPrototypeOf14","_this16","_len13","_key13","_this17","ProtoLibrary_require","ProtoLibrary","ProtoLibrary_ProtoRoot","protoRoot","ProtoLibrary_ProtoFiles","filenames","fileDependencies","ProtoLibrary_ProtoInput","ProtoLibrary_ProtoUpload","ProtoRoot","ProtoLibrary_ProtoNamespace","namespace","ProtoNamespace","handleBuild","onSelectMessageDescriptor","nested","namespaces","Namespace","types","baseName","_namespaces$","subNamespaceName","subNamespace","_types$","subMessageName","subMessage","ProtoLibrary_ProtoMessage","buildable","ProtoMessage","ProtoLibrary_StoredMessages","ProtoFiles","filename","ProtoLibrary_ProtoFile","ProtoFile","handleClick","onRemoveProto","fileDependents","importingFiles","StoredMessages","ProtoLibrary_StoredMessage","StoredMessage","handleRemove","onRemoveStoredMessage","ProtoInput","handleStartAdding","isAdding","handleFilenameChanged","e","handleProtoContentChanged","protoContent","handleSubmit","fileContents","onValidateProto","onAddProto","readOnly","renderError","ProtoUpload","readFile","Promise","resolve","reject","text","readAsText","all","toJS","then","multiple","FileSaver","Main_require","loadStoredProtos","isNode","fs","readFileSync","storedProto","Error","Root","loadSync","keepCase","flatMap","imports","importName","groupBy","importNameAndFilenames","toSet","resolveAll","Main","isNightModeEnabled","handleToggleNightMode","handleAddProto","newFileContents","contents","mergeDeep","_loadStoredProtos","handleRemoveProto","fileName","delete","_loadStoredProtos2","handleValidateProto","handleSelectMessageDescriptor","messageBuildTimer","handleSetFormat","handleExportMessage","kind","extension","blob","Blob","saveAs","handleImportMessage","handleAddToMessage","updateIn","scheduleBuildMessage","handleDeleteFromMessage","listPath","pop","listKey","last","messagePath","deleteIn","handleSetInMessage","setIn","handleMoveInMessage","fromIndex","toIndex","list","movedEntry","insert","handleStoreMessage","rawStoredMessages","handleRemoveStoredMessage","prevTimeout","clearTimeout","setTimeout","libraryCallbacks","messageBuilderCallbacks","_loadStoredProtos3","prevProps","prevState","view_ProtoLibrary","MessageBuilder","ReactDOM","render","view_Main","document","getElementById"],"mappings":"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","file":"static/js/main.2d504487.chunk.js","sourcesContent":["const { List, Map } = require('immutable');\nconst protobuf = require(\"protobufjs\");\nconst shortid = require('shortid');\n\nfunction objectFromEntries(entries) {\n  var o = {};\n  for (var i = 0; i < entries.length; ++i) {\n    const [k, v] = entries[i];\n    o[k] = v\n  }\n  return o;\n}\n\nconst converters = {\n  'binary': ['Binary', 'pbdata', messageToBinary, messageFromBinary],\n  'binary-hex': ['Binary (hex)', 'pbdata.hex', messageToBinaryHex, messageFromBinaryHex],\n  'binary-b64': ['Binary (base64)', 'pbdata.b64', messageToBinaryBase64, messageFromBinaryBase64],\n  'json': ['Json', 'json', messageToJson, messageFromJson],\n  'json-camel': ['Json (camelCase)', 'cc.json', messageToJsonCamelCase, messageFromJsonCamelCase],\n  'json-id': ['Json (field-IDs)', 'ids.json', messageToJsonIds, messageFromJsonIds],\n};\n\nconst converterFormats = Object.keys(converters).sort();\n\nfunction converterName(format) {\n  return converters[format][0];\n}\n\nfunction converterExtension(format) {\n  return converters[format][1];\n}\n\nfunction convertTo(format, messageDescriptor, message) {\n  return converters[format][2](messageDescriptor, message);\n}\n\nfunction messageToBinary(messageDescriptor, message) {\n  const protoMessage = messageToProto(messageDescriptor, message);\n  return messageDescriptor.encode(protoMessage).finish();\n}\n\nfunction messageToBinaryHex(messageDescriptor, message) {\n  const binaryMessage = messageToBinary(messageDescriptor, message);\n  const hex = Array.from(binaryMessage).map((b) =>\n    ((b < 0x10) ? '0' : '') + b.toString(16)\n  );\n  return hex.join('').toUpperCase();\n}\n\nfunction messageToBinaryBase64(messageDescriptor, message) {\n  const binaryMessage = messageToBinary(messageDescriptor, message);\n  return protobuf.util.base64.encode(binaryMessage, 0, binaryMessage.length);\n}\n\nfunction messageToJson(messageDescriptor, message) {\n  const protoMessage = messageToProto(messageDescriptor, message);\n  return JSON.stringify(protoMessage);\n}\n\nfunction messageToJsonCamelCase(messageDescriptor, message) {\n  const protoMessage = messageToProto(messageDescriptor, message);\n  const camelCaseMessage = replaceFieldNames(\n    messageDescriptor,\n    messageDescriptor.toObject(protoMessage, protobuf.util.toJSONOptions),\n    (fieldName) => protobuf.util.camelCase(fieldName)\n  );\n  return JSON.stringify(camelCaseMessage);\n}\n\nfunction messageToJsonIds(messageDescriptor, message) {\n  const protoMessage = messageToProto(messageDescriptor, message);\n  const pbJsonMessage = replaceFieldNames(\n    messageDescriptor,\n    messageDescriptor.toObject(protoMessage, protobuf.util.toJSONOptions),\n    (fieldName, messageDescriptor) => messageDescriptor.fields[fieldName].id);\n  return JSON.stringify(pbJsonMessage);\n}\n\nfunction replaceFieldNames(messageDescriptor, protoMessage, replacementFunc) {\n  return objectFromEntries(Object.entries(protoMessage).map(([k, v]) => {\n    const newName = replacementFunc(k, messageDescriptor);\n    const fieldDescriptor = messageDescriptor.fields[k] || messageDescriptor.fields[newName];\n\n    if (fieldDescriptor.resolvedType && fieldDescriptor.resolvedType.constructor === protobuf.Type) {\n      if (fieldDescriptor.repeated) {\n        return [\n          newName,\n          v.map((value) => replaceFieldNames(fieldDescriptor.resolvedType, value, replacementFunc))\n        ];\n      } else {\n        return [newName, replaceFieldNames(fieldDescriptor.resolvedType, v, replacementFunc)];\n      }\n    } else {\n      return [newName, v];\n    }\n  }));\n}\n\nfunction messageToProto(messageDescriptor, message) {\n  const messageObject = messageToProtoInternal(messageDescriptor, message);\n  return messageDescriptor.fromObject(messageObject);\n}\n\nfunction messageToProtoInternal(messageDescriptor, message) {\n  return message.mapEntries(([key, valueEntries]) => {\n    const fieldDescriptor = messageDescriptor.fieldsById[key];\n    return [fieldDescriptor.name, valueEntriesToProto(fieldDescriptor, valueEntries)];\n  }).toObject();\n}\n\nfunction valueEntriesToProto(fieldDescriptor, valueEntries) {\n  if (fieldDescriptor.map) {\n    return objectFromEntries(valueEntries.map(valueEntry => [\n      valueToProto(fieldDescriptor.keyType, null, valueEntry.get('key')),\n      valueToProto(fieldDescriptor.type, fieldDescriptor.resolvedType, valueEntry.get('value')),\n    ]).toArray());\n  } else if (fieldDescriptor.repeated) {\n    return valueEntries.map(valueEntry =>\n      valueToProto(fieldDescriptor.type, fieldDescriptor.resolvedType, valueEntry.get('value'))\n    ).toArray();\n  } else if (valueEntries.size === 1) {\n    return valueToProto(fieldDescriptor.type, fieldDescriptor.resolvedType, valueEntries.get(0).get('value'));\n  } else {\n    return null;\n  }\n}\n\nfunction valueToProto(fieldType, resolvedType, value) {\n  switch (fieldType) {\n    case \"string\":\n    case \"bytes\":\n    case \"int32\":\n    case \"int64\":\n    case \"sint32\":\n    case \"sint64\":\n    case \"uint32\":\n    case \"uint64\":\n    case \"fixed32\":\n    case \"fixed64\":\n    case \"float\":\n    case \"double\":\n    case \"bool\":\n      return value;\n    default:\n      break;\n  }\n  if (resolvedType === null) {\n    console.error(\"Unhandled value type\", fieldType);\n    return \"\";\n  }\n  if (resolvedType.constructor === protobuf.Enum) {\n    return value;\n  } else if (resolvedType.constructor === protobuf.Type) {\n    return messageToProtoInternal(resolvedType, value);\n  }\n  console.error(\"Unhandled value type\", fieldType);\n  return \"\";\n}\n\nfunction convertFrom(format, messageDescriptor, encodedMessage) {\n  return converters[format][3](messageDescriptor, encodedMessage);\n}\n\nfunction messageFromBinary(messageDescriptor, binaryMessage) {\n  const protoMessage = messageDescriptor.decode(binaryMessage);\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\n}\n\nfunction messageFromBinaryHex(messageDescriptor, hexMessage) {\n  const binaryMessageArray = []\n  for (var i = 0; i < hexMessage.length; i += 2) {\n    binaryMessageArray.push(parseInt(hexMessage.substring(i, i + 2), 16));\n  }\n  return messageFromBinary(messageDescriptor, new Uint8Array(binaryMessageArray));\n}\n\nfunction messageFromBinaryBase64(messageDescriptor, base64Message) {\n  const raw = window.atob(base64Message);\n  const binaryMessage = new Uint8Array(new ArrayBuffer(raw.length));\n  for (let i = 0; i < raw.length; i++) {\n    binaryMessage[i] = raw.charCodeAt(i);\n  }\n  return messageFromBinary(messageDescriptor, binaryMessage);\n}\n\nfunction asUTF8(data) {\n  if (data instanceof Uint8Array) {\n    return new TextDecoder('utf-8').decode(data);\n  } else {\n    return data;\n  }\n}\n\nfunction messageFromJson(messageDescriptor, jsonMessage) {\n  const protoMessage = messageDescriptor.fromObject(JSON.parse(asUTF8(jsonMessage)));\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\n}\n\nfunction findConvertedKey(convertedKey, messageDescriptor, convertFunc) {\n  for (const key in messageDescriptor.fields) {\n    if (convertFunc(key, messageDescriptor).toString() === convertedKey) {\n      return key;\n    }\n  }\n  console.error('Failed to match key');\n  for (const key in messageDescriptor.fields) {\n    console.error('tried', convertFunc(key, messageDescriptor), '===', convertedKey);\n  }\n  console.error('all false.')\n}\n\nfunction reverseReplaceFieldNames(\n  messageDescriptor, convertedMessage, convertFunc) {\n    return replaceFieldNames(\n      messageDescriptor,\n      convertedMessage,\n      (convertedKey, messageDescriptor) => findConvertedKey(\n        convertedKey, messageDescriptor, convertFunc)\n    );\n  }\n\nfunction messageFromJsonCamelCase(messageDescriptor, jsonCamelCaseMessage) {\n  const camelCaseMessage = JSON.parse(asUTF8(jsonCamelCaseMessage));\n  const protoMessage = messageDescriptor.fromObject(reverseReplaceFieldNames(\n    messageDescriptor,\n    camelCaseMessage,\n    (camelCaseFieldName) => {\n      return protobuf.util.camelCase(camelCaseFieldName)\n    }\n  ));\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\n}\n\nfunction messageFromJsonIds(messageDescriptor, jsonIdsMessage) {\n  const idsMessage = JSON.parse(asUTF8(jsonIdsMessage));\n  const protoMessage = messageDescriptor.fromObject(reverseReplaceFieldNames(\n    messageDescriptor,\n    idsMessage,\n    (fieldId, messageDescriptor) => messageDescriptor.fields[fieldId].id\n  ));\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\n}\n\nfunction messageFromProtoMessage(messageDescriptor, protoMessage, options) {\n  return Map(Object.entries(protoMessage).map(([key, value]) => {\n    const fieldDescriptor = messageDescriptor.fields[key];\n    return [fieldDescriptor.id, valueEntriesFromProto(fieldDescriptor, value, options)];\n  }));\n}\n\nfunction valueEntriesFromProto(fieldDescriptor, value, options) {\n  if (fieldDescriptor.map) {\n    return List(Object.entries(value).map(([key, value]) => ({\n      id: shortid.generate(),\n      key: valueFromProto(fieldDescriptor.keyType, null, key),\n      value: valueFromProto(fieldDescriptor.type, fieldDescriptor.resolvedType, value),\n    })));\n  }\n  const values = fieldDescriptor.repeated ? value : [value];\n  return List(\n    values.map(v => (Map({\n      id: shortid.generate(),\n      value: valueFromProto(fieldDescriptor, v, options)\n    })))\n  );\n}\n\nfunction valueFromProto(fieldDescriptor, protoValue, options) {\n  switch (fieldDescriptor.type) {\n    case \"bytes\":\n      return protobuf.util.base64.encode(protoValue, 0, protoValue.length);\n\n    case \"string\":\n    case \"int32\":\n    case \"int64\":\n    case \"sint32\":\n    case \"sint64\":\n    case \"uint32\":\n    case \"uint64\":\n    case \"fixed32\":\n    case \"fixed64\":\n    case \"float\":\n    case \"double\":\n    case \"bool\":\n      return protoValue;\n    default:\n      break;\n  }\n  const resolvedType = fieldDescriptor.resolvedType;\n  if (resolvedType === null) {\n    console.error(\"Unhandled value type\", fieldDescriptor);\n    return \"\";\n  }\n  if (resolvedType.constructor === protobuf.Enum) {\n    return protoValue;\n  } else if (resolvedType.constructor === protobuf.Type) {\n    return messageFromProtoMessage(resolvedType, protoValue, options);\n  }\n  console.error(\"Unhandled value type\", fieldDescriptor);\n  return \"\";\n}\n\nfunction defaultValueEntryForField(fieldDescriptor) {\n  var valueObject = {\n    id: shortid.generate(),\n    value: defaultValueForFieldType(fieldDescriptor.type, fieldDescriptor.resolvedType)\n  };\n  if (fieldDescriptor.map) {\n    valueObject.key = defaultValueForFieldType(fieldDescriptor.keyType, null);\n  }\n  return Map(valueObject);\n}\n\nfunction defaultValueForFieldType(fieldType, resolvedType) {\n  switch (fieldType) {\n    case \"string\":\n    case \"bytes\":\n      return \"\";\n    case \"int32\":\n    case \"int64\":\n    case \"sint32\":\n    case \"sint64\":\n    case \"uint32\":\n    case \"uint64\":\n    case \"fixed32\":\n    case \"fixed64\":\n    case \"float\":\n    case \"double\":\n      return \"0\"\n    case \"bool\":\n      return false;\n    default:\n      break;\n  }\n  if (resolvedType === null) {\n    console.error(\"Unhandled default type, expected resolved type\", fieldType);\n    return \"\";\n  }\n  if (resolvedType.constructor === protobuf.Enum) {\n    return parseInt(List(Object.keys(resolvedType.valuesById)).sort().first(), 10);\n  } else if (resolvedType.constructor === protobuf.Type) {\n    return Map();\n  }\n  console.error(\"Unhandled default type\", fieldType);\n  return \"\";\n}\n\nfunction fullMessageDescriptorName(messageDescriptor) {\n  if (!messageDescriptor) {\n    return \"\";\n  }\n  var name = messageDescriptor.name;\n  while (messageDescriptor.parent && messageDescriptor.parent.name) {\n    name = messageDescriptor.parent.name + '.' + name;\n    messageDescriptor = messageDescriptor.parent;\n  }\n  return name;\n}\n\nexport {\n  converterFormats,\n  converterName,\n  converterExtension,\n  convertTo,\n  convertFrom,\n  defaultValueEntryForField,\n  fullMessageDescriptorName,\n  messageToProto\n};\n","const { fromJS, isKeyed } = require('immutable');\n\nconst tryParseToInt = v => {\n  if (/^[0-9]+$/.test(v)) {\n    return parseInt(v);\n  }\n  return v;\n}\n\nconst reviver = (key, value) => {\n  if (!isKeyed(value)) {\n    return value.toList();\n  }\n  return value.mapEntries(([k, v]) => [tryParseToInt(k), v]).toMap();\n}\n\nconst loadJson = keyName => {\n  const data = fromJS(\n    JSON.parse(window.localStorage.getItem(keyName) || \"{}\"),\n    reviver);\n  console.log('Loaded', keyName, data);\n  return data;\n}\n\nconst saveJson = (keyName, data) => {\n  if (data.isEmpty()) {\n    console.log('Removing', keyName, data);\n    window.localStorage.removeItem(keyName);\n  } else {\n    console.log('Saving', keyName, data);\n    window.localStorage.setItem(keyName, JSON.stringify(data.toJSON()));\n  }\n}\n\nconst protos = {\n  load: () => loadJson('stored_protos'),\n  save: rawStoredProtos => saveJson('stored_protos', rawStoredProtos)\n};\n\nconst messages = {\n  load: () => loadJson('stored_messages'),\n  save: messages => saveJson('stored_messages', messages)\n}\n\nconst format = {\n  load: () => {\n    return window.localStorage.getItem('format') || 'binary';\n  },\n  save: format => {\n    if (format === 'binary') {\n      window.localStorage.removeItem('format');\n    } else {\n      window.localStorage.setItem('format', format);\n    }\n  }\n}\n\nconst config = {\n  load: () => loadJson('config'),\n  save: config => saveJson('config', config),\n}\n\nexport default {protos, messages, format, config};\n","import React from 'react';\nconst protobuf = require(\"protobufjs\");\nconst shortid = require('shortid');\nconst ProtoConvert = require('../ProtoConvert')\n\nconst { List, Map } = require('immutable');\n\nclass MessageBuilderScaffold extends React.Component {\n  handleSelectMessage = (message) => {\n    this.props.callbacks.onSet(List(), message);\n  }\n\n  render() {\n    if (this.props.messageDescriptor === undefined) {\n      return null;\n    }\n    const path = List();\n    return (\n      <React.Fragment>\n        <div className=\"message-builder\">\n          <div className=\"inner-message-builder\">\n          <h1>\n            {this.props.messageDescriptor.name} builder\n          </h1>\n          <StoreMessageButton\n            path={path}\n            messageDescriptor={this.props.messageDescriptor}\n            callbacks={this.props.callbacks}/>\n          <StoredMessageSelector\n            path={path}\n            storedMessages={this.props.storedMessages}\n            messageDescriptor={this.props.messageDescriptor}\n            shouldSet={true}\n            onSelectMessage={this.handleSelectMessage} />\n          <MessageFieldsBuilder\n            path={path}\n            storedMessages={this.props.storedMessages}\n            messageDescriptor={this.props.messageDescriptor}\n            values={this.props.message}\n            callbacks={this.props.callbacks} />\n          </div>\n        </div>\n        <div className=\"output\">\n          <Output\n            messageDescriptor={this.props.messageDescriptor}\n            format={this.props.format}\n            builtMessage={this.props.builtMessage}\n            buildMessageUpToDate={this.props.buildMessageUpToDate}\n            callbacks={this.props.callbacks} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass StoredMessageSelector extends React.Component {\n\n  fullMessageDescriptorName = () => ProtoConvert.fullMessageDescriptorName(\n    this.props.messageDescriptor);\n\n  handleSelectMessage = (event) => {\n    const name = event.target.value;\n    if (name === '') {\n      return;\n    }\n    const message = this.props.storedMessages.getIn(\n      [this.fullMessageDescriptorName(), name]);\n    this.props.onSelectMessage(message);\n    event.target.value = '';\n  }\n\n  render() {\n    const storedMessages = this.props.storedMessages.get(\n      this.fullMessageDescriptorName()) || Map();\n    if (storedMessages.isEmpty()) {\n      return null;\n    }\n    return (\n      <select onChange={this.handleSelectMessage}>\n        <option value=''>Stored message</option>\n        {storedMessages.keySeq().map((name) =>\n          <option key={name} value={name}>\n            {name}\n          </option>\n        )}\n      </select>\n    );\n  }\n}\n\nclass Output extends React.Component {\n  handleExportToFile = () => this.props.callbacks.onExport('file');\n\n  handleChangeFormat = (event) =>\n    this.props.callbacks.onSetFormat(event.target.value);\n\n  handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const fileData = new Uint8Array(reader.result);\n      this.props.callbacks.onImport(fileData);\n    };\n    reader.onerror = (err) =>\n      console.error('FileLoading of', file, 'failed:', err);\n    reader.readAsArrayBuffer(file);\n  }\n\n  handleImportFromFile = () => this.refs.fileuploader.click();\n\n  handleChangeBuiltMessage = (event) => {\n    const value = this.props.format === 'binary' ? new Uint8Array(event.target.value.split(',')) : event.target.value;\n    this.props.callbacks.onImport(value);\n  }\n\n  renderControls() {\n    return (\n      <div className=\"io-controls\">\n        <div>\n          Format:\n          <select\n            onChange={this.handleChangeFormat}\n            defaultValue={this.props.format}>\n            {ProtoConvert.converterFormats.map(key =>\n              <option key={key} value={key}>\n                {ProtoConvert.converterName(key)}\n              </option>\n            )}\n          </select>\n        </div>\n        <div>\n          import\n          <button onClick={this.handleImportFromFile}>Load from file</button>\n          <input\n            type=\"file\"\n            ref=\"fileuploader\"\n            onChange={this.handleFileChange}\n            hidden />\n        </div>\n        <div>\n          export\n          <button onClick={this.handleExportToFile}> Save as file </button>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const builtMessage = this.props.builtMessage[0]\n    const errorMessage = builtMessage === null ? this.props.builtMessage[1] : null;\n    return (\n      <div className=\"inner-output\">\n        {this.renderControls()}\n        <textarea\n          value={errorMessage || builtMessage}\n          className={builtMessage === null ? \"invalid area\" : \"area\"}\n          disabled={!this.props.buildMessageUpToDate}\n          onChange={this.handleChangeBuiltMessage} />\n      </div>\n    );\n  }\n}\n\nclass StoreMessageButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isStoring: false,\n    }\n  }\n\n  handleStartStoring = () => {\n    this.setState({\n      isStoring: true\n    });\n  }\n\n  handleCommitStore = () => {\n    const storeName = this.refs.storeName.value;\n    const fullMessageDescriptorName = ProtoConvert.fullMessageDescriptorName(\n      this.props.messageDescriptor\n    );\n    this.props.callbacks.onStore(\n      this.props.path,\n      fullMessageDescriptorName,\n      storeName\n    );\n    this.setState({isStoring: false});\n  }\n\n  handleDiscardStore = () => {\n    this.setState({isStoring: false});\n  }\n\n  render() {\n    const messageDescriptor = this.props.messageDescriptor;\n    if (!messageDescriptor || messageDescriptor.constructor !== protobuf.Type) {\n      return null;\n    }\n    if (!this.state.isStoring) {\n      return (\n        <button onClick={this.handleStartStoring}>\n          store\n        </button>\n      );\n    }\n    return (\n      <React.Fragment>\n        Store as <input type=\"text\" ref=\"storeName\"/>\n        <button onClick={this.handleDiscardStore}>cancel</button>\n        <button onClick={this.handleCommitStore}>store</button>\n      </React.Fragment>\n    );\n  }\n}\n\nclass MessageFieldsBuilder extends React.Component {\n\n  isRegularField = fieldDescriptor => fieldDescriptor.partOf === null;\n\n  fieldTypeName = (fieldDescriptor) => {\n    const type = fieldDescriptor.type;\n    if (fieldDescriptor.map) {\n      const keyType = fieldDescriptor.keyType;\n      return 'map<' + keyType + ',' + type + '>';\n    }\n    const repeated = fieldDescriptor.repeated ? '*' : '';\n    const required = fieldDescriptor.required ? '!' : '';\n    return type + repeated + required;\n  }\n\n  render() {\n    const regularFieldDescriptors = Object\n      .values(this.props.messageDescriptor.fields)\n      .filter(this.isRegularField);\n    const oneOfDescriptors = Object\n      .values(this.props.messageDescriptor.oneofs || {});\n\n    const regularFieldItems = regularFieldDescriptors.map(fieldDescriptor =>\n      <li key={fieldDescriptor.name}>\n        <b>{this.fieldTypeName(fieldDescriptor)}</b> - {fieldDescriptor.name} = {fieldDescriptor.id}\n        <MessageFieldValuesBuilder\n          path={this.props.path.concat([fieldDescriptor.id])}\n          storedMessages={this.props.storedMessages}\n          fieldDescriptor={fieldDescriptor}\n          valueEntries={this.props.values.get(fieldDescriptor.id) || List()}\n          callbacks={this.props.callbacks} />\n      </li>\n    );\n\n    const oneOfItems = oneOfDescriptors.map(oneOfDescriptor =>\n      <li key={oneOfDescriptor.name}>\n        <b>oneof</b> {oneOfDescriptor.name}\n        <MessageOneOfFieldValuesBuilder\n          path={this.props.path}\n          storedMessages={this.props.storedMessages}\n          messageDescriptor={this.props.messageDescriptor}\n          oneOfDescriptor={oneOfDescriptor}\n          values={this.props.values}\n          callbacks={this.props.callbacks} />\n      </li>\n    );\n\n    return (\n      <ul>\n        {regularFieldItems}\n        {oneOfItems}\n      </ul>\n    );\n  }\n}\n\nclass MessageFieldValuesBuilder extends React.Component{\n  render() {\n    const messageFieldValueBuilders = this.props.valueEntries.map((valueEntry, index) =>\n      <MessageFieldValueBuilder\n        key={valueEntry.get('id')}\n        path={this.props.path}\n        storedMessages={this.props.storedMessages}\n        index={index}\n        numEntries={this.props.valueEntries.size}\n        fieldDescriptor={this.props.fieldDescriptor}\n        valueEntry={valueEntry}\n        callbacks={this.props.callbacks} />\n    );\n\n    return (\n      <ul>\n        {messageFieldValueBuilders}\n        <MessageFieldValuesAddControls\n          path={this.props.path}\n          storedMessages={this.props.storedMessages}\n          fieldDescriptor={this.props.fieldDescriptor}\n          numValueEntries={this.props.valueEntries.size}\n          callbacks={this.props.callbacks} />\n      </ul>\n    );\n  }\n}\n\nclass MessageFieldValuesAddControls extends React.Component {\n  handleSet = () => {\n    this.props.callbacks.onAdd(\n      this.props.path,\n      ProtoConvert.defaultValueEntryForField(this.props.fieldDescriptor));\n  }\n\n  handleSelectMessage = (message) => {\n    const valueEntry = Map({\n      id: shortid.generate(),\n      value: message,\n    });\n    this.props.callbacks.onAdd(this.props.path, valueEntry);\n  }\n\n  render() {\n    const showSet = this.props.numValueEntries === 0;\n    const showAdd = this.props.fieldDescriptor.repeated || this.props.fieldDescriptor.map;\n    if (!showSet && !showAdd) {\n      return null;\n    }\n    return (\n      <li>\n        <button onClick={this.handleSet}> {(showAdd) ? 'add' : 'set'} </button>\n        <StoredMessageSelector\n          path={this.props.path}\n          storedMessages={this.props.storedMessages}\n          messageDescriptor={this.props.fieldDescriptor.resolvedType}\n          onSelectMessage={this.handleSelectMessage} />\n      </li>\n    );\n  }\n}\n\nclass MessageFieldValueBuilder extends React.Component{\n  handleDelete = () =>\n    this.props.callbacks.onDelete(this.props.path.concat([this.props.index]));\n\n  handleDuplicate = () => {\n    this.props.callbacks.onAdd(\n      this.props.path,\n      this.props.valueEntry.set('id', shortid.generate())\n    );\n  }\n\n  handleMoveUp = () => {\n    this.props.callbacks.onMove(this.props.path, this.props.index, this.props.index - 1);\n  }\n\n  handleMoveDown = () => {\n    this.props.callbacks.onMove(this.props.path, this.props.index, this.props.index + 1);\n  }\n\n  render() {\n    const showDelete = this.props.fieldDescriptor.partOf === null;\n    const showDuplicate = this.props.fieldDescriptor.repeated || this.props.fieldDescriptor.map;\n    const showMove = this.props.fieldDescriptor.repeated;\n    const enableMoveDown = this.props.index !== this.props.numEntries - 1;\n    const enableMoveUp = this.props.index !== 0;\n    return (\n      <li key={this.props.valueEntry.get('id')}>\n        <button\n          onClick={this.handleDelete}\n          hidden={!showDelete}\n          className=\"tiny\">\n          -\n        </button>\n        <button\n          onClick={this.handleDuplicate}\n          hidden={!showDuplicate}\n          className=\"tiny\">\n          *\n        </button>\n        <button\n          onClick={this.handleMoveDown}\n          hidden={!showMove}\n          disabled={!enableMoveDown}\n          className=\"tiny\">\n          v\n        </button>\n        <button\n          onClick={this.handleMoveUp}\n          hidden={!showMove}\n          disabled={!enableMoveUp}\n          className=\"tiny\">\n          ^\n        </button>\n        <StoreMessageButton\n          path={this.props.path.concat([this.props.index, 'value'])}\n          messageDescriptor={this.props.fieldDescriptor.resolvedType}\n          callbacks={this.props.callbacks} />\n        {\n          this.props.fieldDescriptor.map\n          ? <MessageFieldInput\n              path={this.props.path.concat([this.props.index, 'key'])}\n              storedMessages={this.props.storedMessages}\n              fieldType={this.props.fieldDescriptor.keyType}\n              resolvedType={null}\n              value={this.props.valueEntry.get('key')}\n              callbacks={this.props.callbacks} />\n          : <React.Fragment />\n        }\n        <MessageFieldInput\n          path={this.props.path.concat([this.props.index, 'value'])}\n          storedMessages={this.props.storedMessages}\n          fieldType={this.props.fieldDescriptor.type}\n          resolvedType={this.props.fieldDescriptor.resolvedType}\n          value={this.props.valueEntry.get('value')}\n          callbacks={this.props.callbacks} />\n      </li>\n    );\n  }\n}\n\nclass MessageOneOfFieldValuesBuilder extends React.Component {\n\n  currentFieldDescriptor = () => {\n    const maybeCurrentFieldId = this.props.values.keySeq().find(\n      fieldId => this.props.messageDescriptor.fieldsById[fieldId].partOf === this.props.oneOfDescriptor);\n    if (maybeCurrentFieldId === undefined) {\n      return null;\n    }\n    return this.props.messageDescriptor.fieldsById[maybeCurrentFieldId];\n  }\n\n  onChange = (event) => {\n    const currentFieldDescriptor = this.currentFieldDescriptor();\n    if (currentFieldDescriptor !== null) {\n      this.props.callbacks.onDelete(this.props.path.concat([currentFieldDescriptor.id, 0]));\n    }\n    if (event.target.value.length !== 0) {\n      const newFieldId = parseInt(event.target.value, 10);\n      const newFieldDescriptor = this.props.messageDescriptor.fieldsById[newFieldId];\n      this.props.callbacks.onAdd(\n        this.props.path.concat([newFieldDescriptor.id]),\n        ProtoConvert.defaultValueEntryForField(newFieldDescriptor)\n      );\n    }\n  }\n\n  render() {\n    const maybeCurrentFieldDescriptor = this.currentFieldDescriptor();\n    return (\n      <React.Fragment>\n        <ul>\n          <li>\n            <select\n              value={maybeCurrentFieldDescriptor !== null ? maybeCurrentFieldDescriptor.id : ''}\n              onChange={this.onChange}>\n              <option value={''}></option>\n              {this.props.oneOfDescriptor.fieldsArray.map(\n                (fieldDescriptor) => (\n                  <option\n                    key={fieldDescriptor.id}\n                    value={fieldDescriptor.id}>\n                    {fieldDescriptor.type} - {fieldDescriptor.name} = {fieldDescriptor.id}\n                  </option>\n                )\n              )}\n            </select>\n            {(maybeCurrentFieldDescriptor !== null\n              ? <MessageFieldValuesBuilder\n                  path={this.props.path.concat([maybeCurrentFieldDescriptor.id])}\n                  storedMessages={this.props.storedMessages}\n                  fieldDescriptor={maybeCurrentFieldDescriptor}\n                  valueEntries={this.props.values.get(maybeCurrentFieldDescriptor.id) || List()}\n                  callbacks={this.props.callbacks} />\n              : <React.Fragment />\n            )}\n          </li>\n        </ul>\n\n      </React.Fragment>\n    );\n  }\n}\n\nclass MessageFieldInput extends React.Component {\n  render() {\n    switch (this.props.fieldType) {\n      case \"string\":\n        return <MessageTextInput\n          path={this.props.path}\n          value={this.props.value}\n          callbacks={this.props.callbacks} />\n      case \"bytes\":\n        return <MessageBytesInput\n          path={this.props.path}\n          value={this.props.value}\n          callbacks={this.props.callbacks} />\n      case \"int32\":\n      case \"int64\":\n      case \"sint32\":\n      case \"sint64\":\n      case \"uint32\":\n      case \"uint64\":\n      case \"fixed32\":\n      case \"fixed64\":\n        return <MessageIntInput\n          path={this.props.path}\n          value={this.props.value}\n          callbacks={this.props.callbacks} />\n      case \"float\":\n      case \"double\":\n        return <MessageFloatInput\n          path={this.props.path}\n          value={this.props.value}\n          callbacks={this.props.callbacks} />\n      case \"bool\":\n        return <MessageBoolInput\n          path={this.props.path}\n          value={this.props.value}\n          callbacks={this.props.callbacks} />\n      default:\n        break;\n    }\n    const resolvedType = this.props.resolvedType;\n    if (resolvedType.constructor === protobuf.Enum) {\n      return <MessageEnumInput\n        path={this.props.path}\n        type={resolvedType}\n        value={this.props.value}\n        callbacks={this.props.callbacks} />\n    } else if (resolvedType.constructor === protobuf.Type) {\n      return <MessageFieldsBuilder\n        path={this.props.path}\n        storedMessages={this.props.storedMessages}\n        messageDescriptor={resolvedType}\n        values={this.props.value}\n        callbacks={this.props.callbacks} />\n    }\n    console.error(\"Unhandled input type\", this.props.fieldType);\n    return <div/>\n  }\n}\n\nclass MessageTextInput extends React.Component {\n  handleChange = (event) => {\n    // console.log('MessageTextInput change', this.props.path, event.target.value);\n    this.props.callbacks.onSet(this.props.path, event.target.value);\n  }\n\n  render() {\n    return <textarea onChange={this.handleChange} value={this.props.value} />\n  }\n}\n\nclass MessageBytesInput extends React.Component {\n  isValid = () => protobuf.util.base64.test(this.props.value);\n\n  handleChange = (event) => {\n    // console.log(\"MessageBytesInput change\", this.props.path, event.target.value);\n    this.props.callbacks.onSet(this.props.path, event.target.value);\n  }\n\n  render() {\n    const isValid = this.isValid();\n    return (\n      <textarea\n        onChange={this.handleChange}\n        value={this.props.value}\n        className={isValid ? \"\" : \"invalid\"} />\n    );\n  }\n\n}\n\nclass MessageIntInput extends React.Component {\n  isValid = () => /^[0-9]+$/.test(this.props.value);\n\n  handleChange = (event) => {\n    // console.log('MessageIntInput change', this.props.path, event.target.value);\n    this.props.callbacks.onSet(this.props.path, event.target.value);\n  }\n\n  render() {\n    const isValid = this.isValid();\n    return (\n      <input\n        type=\"text\"\n        onChange={this.handleChange}\n        value={this.props.value}\n        className={isValid ? \"\" : \"invalid\"} />\n    );\n  }\n}\n\nclass MessageFloatInput extends React.Component {\n  isValid = () =>\n    /^[0-9]+$|^[0-9]+[.][0-9]*$|^[0-9]*[.][0-9]+$/.test(this.props.value);\n\n  handleChange = (event) => {\n    // console.log('MessageFloatInput change', this.props.path, event.target.value);\n    this.props.callbacks.onSet(this.props.path, event.target.value);\n  }\n\n  render() {\n    const isValid = this.isValid();\n    return (\n      <input\n        type=\"text\"\n        onChange={this.handleChange}\n        value={this.props.value}\n        className={isValid ? \"\" : \"invalid\"} />\n    );\n  }\n}\n\nclass MessageBoolInput extends React.Component {\n  handleChange = (event) => {\n    // console.log('MessageBoolInput', this.props.path, event.target.checked);\n    this.props.callbacks.onSet(this.props.path, event.target.checked);\n  }\n\n  render() {\n    return (\n      <input\n        type=\"checkbox\"\n        checked={this.props.value}\n        onChange={this.handleChange} />\n    )\n  }\n}\n\nclass MessageEnumInput extends React.Component {\n  handleChange = (event) => {\n    const value = parseInt(event.target.value);\n    // console.log('MessageEnumInput.change', this.props.path, typeof(value), value);\n    this.props.callbacks.onSet(this.props.path, value);\n  }\n\n  render() {\n    const keys = List(Object.keys(this.props.type.valuesById)).sort();\n    return (\n      <select defaultValue={this.props.value} onChange={this.handleChange}>\n        {keys.map(key => (\n          <option value={key} key={key}>\n            {this.props.type.valuesById[key]} = {key}\n          </option>\n        ))}\n      </select>\n    )\n  }\n}\n\nexport default MessageBuilderScaffold;\n","import React from 'react';\nconst ProtoConvert =  require('../ProtoConvert');\nconst protobuf = require(\"protobufjs\");\nconst { List, Map } = require('immutable');\n\nclass ProtoLibrary extends React.Component {\n  render() {\n    return (\n      <div className=\"inner-proto-library\">\n        <h2>\n          Known messages\n        </h2>\n        <ProtoRoot\n          protoRoot={this.props.protoRoot}\n          storedMessages={this.props.storedMessages}\n          callbacks={this.props.callbacks} />\n        <h2>\n          Known files\n        </h2>\n        <ProtoFiles\n          filenames={this.props.filenames}\n          fileDependencies={this.props.fileDependencies}\n          callbacks={this.props.callbacks} />\n        <ProtoInput callbacks={this.props.callbacks} />\n        <ProtoUpload callbacks={this.props.callbacks} />\n      </div>\n    );\n  }\n}\n\nclass ProtoRoot extends React.Component {\n  render() {\n    if (!this.props.protoRoot) {\n      return <React.Fragment />;\n    }\n    return <ProtoNamespace\n      name={''}\n      namespace={this.props.protoRoot}\n      storedMessages={this.props.storedMessages}\n      callbacks={this.props.callbacks} />\n  }\n}\n\nclass ProtoNamespace extends React.Component {\n  handleBuild = () =>\n    this.props.callbacks.onSelectMessageDescriptor(this.props.namespace);\n\n  render() {\n    const nested = this.props.namespace.nested || {};\n    const entries = Object.entries(nested);\n    const namespaces = entries.filter(([k, v]) => v.constructor === protobuf.Namespace);\n    const types = entries.filter(([k, v]) => v.constructor === protobuf.Type);\n\n    if (this.props.namespace.constructor === protobuf.Namespace) {\n      const baseName = this.props.name ? this.props.name + '.' : '';\n      if (namespaces.length === 1 && types.length === 0) {\n        const [subNamespaceName, subNamespace] = namespaces[0];\n        return <ProtoNamespace\n          name={baseName + subNamespaceName}\n          namespace={subNamespace}\n          storedMessages={this.props.storedMessages}\n          callbacks={this.props.callbacks} />\n      } else if (namespaces.length === 0 && types.length === 1) {\n        const [subMessageName, subMessage] = types[0];\n        return <ProtoMessage\n          name={baseName + subMessageName}\n          message={subMessage}\n          storedMessages={this.props.storedMessages}\n          callbacks={this.props.callbacks} />;\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {this.props.name}\n        <button\n          onClick={this.handleBuild}\n          hidden={!this.props.buildable}>\n          build\n        </button>\n        <ul>\n          {namespaces.map(([k ,v]) =>\n            <li key={k} >\n              <ProtoNamespace\n                name={k}\n                namespace={v}\n                storedMessages={this.props.storedMessages}\n                callbacks={this.props.callbacks} />\n            </li>\n          )}\n          {types.map(([k, v]) =>\n            <li key={k}>\n              <ProtoMessage\n                name={k}\n                message={v}\n                storedMessages={this.props.storedMessages}\n                callbacks={this.props.callbacks} />\n            </li>\n           )}\n        </ul>\n      </React.Fragment>\n    );\n  }\n}\n\nclass ProtoMessage extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ProtoNamespace\n          name={this.props.name}\n          namespace={this.props.message}\n          buildable={true}\n          storedMessages={this.props.storedMessages}\n          callbacks={this.props.callbacks} />\n        <StoredMessages\n          storedMessages={this.props.storedMessages}\n          messageDescriptor={this.props.message}\n          callbacks={this.props.callbacks} />\n      </React.Fragment>\n    );\n  }\n}\n\nclass ProtoFiles extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.filenames.sort().map(filename =>\n          <li key={filename}>\n            <ProtoFile\n              filename={filename}\n              fileDependencies={this.props.fileDependencies}\n              callbacks={this.props.callbacks} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nclass ProtoFile extends React.Component {\n  handleClick = () => {\n    this.props.callbacks.onRemoveProto(this.props.filename);\n  }\n\n  render() {\n    const fileDependents = this.props.fileDependencies.get(this.props.filename, List());\n\n    const importingFiles = (fileDependents.isEmpty()\n      ? <React.Fragment />\n      : <ProtoFiles\n          filenames={fileDependents}\n          fileDependencies={this.props.fileDependencies}\n          callbacks={this.props.callbacks}/>);\n\n    return (\n      <React.Fragment>\n        <button\n          onClick={this.handleClick}\n          disabled={!fileDependents.isEmpty()}\n          className=\"tiny\">\n           -\n        </button>\n        {this.props.filename}\n        {importingFiles}\n      </React.Fragment>\n    );\n  }\n}\n\nclass StoredMessages extends React.Component {\n  render() {\n    const fullMessageDescriptorName = ProtoConvert.fullMessageDescriptorName(this.props.messageDescriptor)\n    const storedMessages = this.props.storedMessages.get(fullMessageDescriptorName);\n    if (!storedMessages) {\n      return null;\n    }\n    return (\n      <ul>\n        {storedMessages.keySeq().map(name =>\n          <StoredMessage\n            key={name}\n            name={name}\n            messageDescriptor={this.props.messageDescriptor}\n            callbacks={this.props.callbacks} />\n        )}\n      </ul>\n    );\n  }\n}\n\nclass StoredMessage extends React.Component {\n  handleRemove = (event) => {\n    this.props.callbacks.onRemoveStoredMessage(\n      ProtoConvert.fullMessageDescriptorName(this.props.messageDescriptor),\n      this.props.name\n    );\n  }\n\n  render() {\n    return (\n      <li>\n        <button onClick={this.handleRemove} className='tiny'>\n        -\n        </button>\n        {this.props.name}\n      </li>\n    );\n  }\n}\n\nclass ProtoInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filename: \"\",\n      isAdding: false,\n      protoContent: \"\",\n      error: \"\",\n    }\n  }\n\n  handleStartAdding = () => this.setState({isAdding: true});\n\n  handleFilenameChanged = e => {\n    const filename = e.target.value;\n    this.setState({filename})\n  }\n\n  handleProtoContentChanged = e => {\n    const protoContent = e.target.value;\n    this.setState({protoContent});\n  };\n\n  handleSubmit = () => {\n    const filename = this.state.filename;\n    const protoContent = this.state.protoContent;\n    const fileContents = Map([[filename, protoContent]]);\n    const error = this.props.callbacks.onValidateProto(fileContents)\n    if (error) {\n      console.error(\"Adding proto failed due to error\", error);\n      this.setState({error});\n    } else {\n      this.props.callbacks.onAddProto(fileContents);\n      this.setState({\n        filename: \"\",\n        isAdding: false,\n        protoContent: \"\",\n        error: \"\",\n      });\n    }\n  }\n\n  renderError() {\n    if (!this.state.error) {\n      return <React.Fragment />;\n    }\n    return <React.Fragment><textarea value={this.state.error} className=\"invalid\" readOnly></textarea></React.Fragment>;\n  }\n\n  render() {\n    if (!this.state.isAdding) {\n      return <button onClick={this.handleStartAdding} > Add </button>\n    }\n    return (\n      <React.Fragment>\n        File name: <input type=\"text\" value={this.state.filename} onChange={this.handleFilenameChanged} /> <br />\n        ProtoContent: <br />\n        <textarea value={this.state.protoContent} onChange={this.handleProtoContentChanged}/> <br />\n        {this.renderError()}\n        <button onClick={this.handleSubmit} > Submit </button>\n      </React.Fragment>\n    )\n  }\n}\n\nclass ProtoUpload extends React.Component {\n  readFile = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const text = reader.result;\n        resolve([file.name, text]);\n      };\n      reader.onerror = (err) => {\n        reject({file, err});\n      };\n      reader.readAsText(file);\n    });\n  }\n\n  handleFileChange = (event) => {\n    Promise\n      .all(List(event.target.files).map(this.readFile).toJS())\n      .then(fileContents => {\n        this.props.callbacks.onAddProto(Map(fileContents));\n      }, (file) => console.error('FileLoading of', file, 'failed:'));\n  }\n\n  handleClick = () => this.refs.fileuploader.click();\n\n  render() {\n    return (\n      <React.Fragment>\n        <button onClick={this.handleClick}>\n          From disk\n        </button>\n        <input\n          type=\"file\"\n          ref=\"fileuploader\"\n          onChange={this.handleFileChange}\n          hidden\n          multiple />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProtoLibrary;\n","import React from 'react';\nimport LocalStorage from '../LocalStorage'\nimport MessageBuilderScaffold from './MessageBuilder';\nimport ProtoLibrary from './ProtoLibrary';\nconst ProtoConvert = require('../ProtoConvert')\nconst protobuf = require(\"protobufjs\");\nconst FileSaver = require(\"file-saver\");\nconst { List, Map } = require('immutable');\n\nfunction loadStoredProtos(rawStoredProtos) {\n  // Cheat a bit so that we can load files synchronously\n  protobuf.util.isNode = true;\n  protobuf.util.fs = {\n    readFileSync: (filename) => {\n      const storedProto = rawStoredProtos.get(filename);\n      if (storedProto === undefined) {\n        throw new Error('Needed to load unknown file: ' + filename);\n      }\n      return storedProto.get('contents');\n    }\n  };\n\n  const protoRoot = new protobuf.Root();\n  const filenames = rawStoredProtos.keySeq().toList();\n  protoRoot.loadSync(filenames.toJS(), { keepCase: true });\n\n  const importEntries = List(filenames.flatMap(filename => {\n    const imports = protobuf.parse(\n      rawStoredProtos.get(filename).get('contents')\n    ).imports || [];\n    return imports.map(importName => [importName, filename]);\n  }));\n  const groupedEntries = importEntries\n    .groupBy(([importName, filename]) => importName)\n  const mappedEntries = groupedEntries\n    .map(importNameAndFilenames => {\n      const filenames = importNameAndFilenames.map(([importName, filename]) => filename);\n      const filenameSet = filenames.toSet();\n      return filenameSet;\n    });\n  const fileDependencies = mappedEntries;\n\n  protoRoot.resolveAll();\n\n  return {protoRoot, fileDependencies};\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: Map(),\n      rawStoredProtos: Map(),\n      protoRoot: null,\n      fileDependencies: Map(),\n      rawStoredMessages: Map(),\n      message: Map(),\n      format: 'binary',\n      builtMessage: ['', null],\n    }\n    this.libraryCallbacks = {\n      onAddProto: this.handleAddProto,\n      onRemoveProto: this.handleRemoveProto,\n      onValidateProto: this.handleValidateProto,\n      onSelectMessageDescriptor: this.handleSelectMessageDescriptor,\n      onRemoveStoredMessage: this.handleRemoveStoredMessage,\n    };\n    this.messageBuilderCallbacks = {\n      onAdd: this.handleAddToMessage,\n      onDelete: this.handleDeleteFromMessage,\n      onSet: this.handleSetInMessage,\n      onMove: this.handleMoveInMessage,\n      onStore: this.handleStoreMessage,\n      onSetFormat: this.handleSetFormat,\n      onExport: this.handleExportMessage,\n      onImport: this.handleImportMessage,\n    };\n  }\n\n  isNightModeEnabled = () => {\n    return !this.state.config.get('day-mode');\n  }\n\n  handleToggleNightMode = () => {\n    this.setState((state) => ({\n      config: state.config.set('day-mode', !state.config.get('day-mode'))\n    }));\n  }\n\n  handleAddProto = (fileContents) => {\n    this.setState((state) => {\n      const newFileContents = fileContents.mapEntries(([filename, contents]) => {\n        return [filename, Map({contents})];\n      });\n      const rawStoredProtos = state.rawStoredProtos.mergeDeep(newFileContents);\n      try {\n        const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\n        return {rawStoredProtos, protoRoot, fileDependencies};\n      } catch (err) {\n        console.error(\"Failed to parse protobuf contents\", err);\n        return {};\n      }\n    });\n  }\n\n  handleRemoveProto = (fileName) => {\n    // console.log('handleRemoveProto', this.state.rawStoredProtos.toString());\n    this.setState((state) => {\n      const rawStoredProtos = state.rawStoredProtos.delete(fileName);\n      const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\n      return {rawStoredProtos, protoRoot, fileDependencies};\n    });\n  }\n\n  handleValidateProto = (fileContents) => {\n    const newFileContents = fileContents.mapEntries(([filename, contents]) => {\n      return [filename, Map({contents})];\n    });\n    const rawStoredProtos = this.state.rawStoredProtos.mergeDeep(newFileContents);\n    try {\n      loadStoredProtos(rawStoredProtos);\n      return null;\n    } catch (err) {\n      return err;\n    }\n  }\n\n  handleSelectMessageDescriptor = (messageDescriptor) => {\n    console.log('Setting descriptor to build:', messageDescriptor);\n    this.setState({\n      messageDescriptor,\n      message: Map(),\n      builtMessage: ['', null],\n      messageBuildTimer: null,\n    });\n  }\n\n  handleSetFormat = (format) => {\n    this.setState({\n      format,\n      builtMessage: [\n        ProtoConvert.convertTo(\n          format,\n          this.state.messageDescriptor,\n          this.state.message),\n        null\n      ],\n      messageBuildTimer: null,\n    });\n  }\n\n  handleExportMessage = (kind) => {\n    console.log('Export', this.state.format, 'to', kind);\n\n    const data = ProtoConvert.convertTo(\n      this.state.format,\n      this.state.messageDescriptor,\n      this.state.message);\n    // console.log('data', data);\n    console.log('handleExportMessage', this.refs);\n\n    if (kind === 'file') {\n      const extension = ProtoConvert.converterExtension(this.state.format);\n      const blob = new Blob([data], {type: 'application/octet-stream'});\n      FileSaver.saveAs(blob, this.state.messageDescriptor.name + '.' + extension);\n    } else {\n      console.error('Unhandled export kind:', kind);\n    }\n  }\n\n  handleImportMessage = (data) => {\n    console.log('Import', data.length, 'bytes as', this.state.format);\n    try {\n      const message = ProtoConvert.convertFrom(\n        this.state.format,\n        this.state.messageDescriptor,\n        data\n      );\n      this.setState({\n        message,\n        builtMessage: [\n          ProtoConvert.convertTo(\n            this.state.format,\n            this.state.messageDescriptor,\n            message),\n          null\n        ],\n        messageBuildTimer: null,\n      });\n    } catch (err) {\n      this.setState({builtMessage: [null, err]});\n    }\n  }\n\n  handleAddToMessage = (path, valueEntry) => {\n    console.log('handleAddToMessage', this.state.message, path.toString(), valueEntry);\n    this.setState((state) => ({\n      message: state.message.updateIn(\n        path,\n        (list = List()) => list.push(valueEntry)\n      ),\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\n    }));\n  }\n\n  handleDeleteFromMessage = (path) => {\n    // console.log('handleDeleteFromMessage', this.state.message, path.toString());\n    this.setState((state) => {\n      const listPath = path.pop();\n      const listKey = listPath.last();\n      const messagePath = listPath.pop()\n      const messageWithDeletedListEntry = state.message.deleteIn(path);\n      // Delete the whole list if the last entry is removed\n      const newMessage = messageWithDeletedListEntry.updateIn(\n        messagePath,\n        message => (\n          message.get(listKey).isEmpty()\n          ? message.delete(listKey)\n          : message));\n      return {\n        message: newMessage,\n        messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\n      };\n    });\n  }\n\n  handleSetInMessage = (path, valueEntry) => {\n    // console.log('handleSetInMessage', this.state.message, path, valueEntry);\n    this.setState((state) => ({\n      message: state.message.setIn(path, valueEntry),\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\n    }));\n  }\n\n  handleMoveInMessage = (path, fromIndex, toIndex) => {\n    this.setState((state) => ({\n      message: state.message.updateIn(\n        path,\n        (list = List()) => {\n          const movedEntry = list.get(fromIndex);\n          return list.delete(fromIndex).insert(toIndex, movedEntry);\n        }\n      ),\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\n    }));\n  }\n\n  handleStoreMessage = (path, fullMessageDescriptorName, name) => {\n    this.setState((state) => {\n      const message = state.message.getIn(path);\n      return {\n        rawStoredMessages: state.rawStoredMessages.updateIn(\n          [fullMessageDescriptorName],\n          (map = Map()) => map.set(name, message))\n      };\n    })\n  }\n\n  handleRemoveStoredMessage = (fullMessageDescriptorName, name) => {\n    this.setState((state) => {\n      var rawStoredMessages = state.rawStoredMessages.deleteIn(\n        [fullMessageDescriptorName, name]);\n      rawStoredMessages = rawStoredMessages.get(fullMessageDescriptorName).isEmpty()\n        ? rawStoredMessages.delete(fullMessageDescriptorName)\n        : rawStoredMessages;\n      console.log('handleRemoveStoredMessage', fullMessageDescriptorName, name, rawStoredMessages)\n      return {rawStoredMessages};\n    });\n  }\n\n  componentDidMount() {\n    const rawStoredProtos = LocalStorage.protos.load();\n    const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\n    const rawStoredMessages = LocalStorage.messages.load();\n    const format = LocalStorage.format.load();\n    const config = LocalStorage.config.load();\n\n    this.setState({\n      config,\n      rawStoredProtos,\n      protoRoot,\n      fileDependencies,\n      rawStoredMessages,\n      format,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.rawStoredProtos !== this.state.rawStoredProtos) {\n      LocalStorage.protos.save(this.state.rawStoredProtos);\n    }\n    if (prevState.format !== this.state.format) {\n      LocalStorage.format.save(this.state.format);\n    }\n    if (prevState.rawStoredMessages !== this.state.rawStoredMessages) {\n      LocalStorage.messages.save(this.state.rawStoredMessages);\n    }\n    if (prevState.config !== this.state.config) {\n      LocalStorage.config.save(this.state.config);\n    }\n  }\n\n  scheduleBuildMessage = (prevTimeout) => {\n    clearTimeout(prevTimeout);\n    return setTimeout(() =>\n      this.setState((state) => {\n        try {\n          return {\n            builtMessage: [\n              ProtoConvert.convertTo(\n                state.format,\n                state.messageDescriptor,\n                state.message),\n                null\n            ],\n            messageBuildTimer: null,\n          };\n        } catch (err) {\n          return {\n            builtMessage: [null, err],\n            messageBuildTimer: null,\n          }\n        }\n      }),\n      500\n    );\n  }\n\n  render() {\n    return (\n      <div className={`protool ${this.isNightModeEnabled() ? \"night-mode\" : \"\"}`}>\n        <div className=\"proto-library\">\n          <ProtoLibrary\n            filenames={this.state.rawStoredProtos.keySeq().toList()}\n            fileDependencies={this.state.fileDependencies}\n            protoRoot={this.state.protoRoot}\n            storedMessages={this.state.rawStoredMessages}\n            callbacks={this.libraryCallbacks} />\n            <div className=\"config\">\n              <label className=\"dark-mode-config\">\n                Dark mode:\n                <input type=\"checkbox\" checked={this.isNightModeEnabled()} onChange={this.handleToggleNightMode} />\n              </label>\n            </div>\n        </div>\n        <main>\n          <MessageBuilderScaffold\n            key={ProtoConvert.fullMessageDescriptorName(this.state.messageDescriptor)}\n            messageDescriptor={this.state.messageDescriptor}\n            message={this.state.message}\n            format={this.state.format}\n            builtMessage={this.state.builtMessage}\n            buildMessageUpToDate={this.state.messageBuildTimer === null}\n            storedMessages={this.state.rawStoredMessages}\n            callbacks={this.messageBuilderCallbacks} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './view/Main';\nimport './index.css';\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}