{"version":3,"sources":["ProtoConvert.js","LocalStorage.js","view/MessageBuilder.js","view/ProtoLibrary.js","view/Main.js","index.js"],"names":["protobuf","require","List","Map","converters","binary","messageToBinary","binary-hex","messageDescriptor","message","binaryMessage","Array","from","map","b","toString","join","toUpperCase","binary-b64","util","base64","encode","length","json","protoMessage","messageToProto","JSON","stringify","json-camel","camelCaseMessage","replaceFieldNames","fieldName","camelCase","json-id","pbJsonMessage","field","id","converterFormats","Object","keys","sort","converterName","format","convert","finish","replacementFunc","fromEntries","entries","_ref","_ref2","G_devel_Javascript_protool_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","k","v","fields","newName","resolvedType","constructor","Type","repeated","value","messageObject","messageToProtoInternal","fromObject","mapEntries","_ref3","_ref4","key","valueEntries","fieldsById","name","valueEntry","valueToProto","get","toArray","size","valueEntriesToProto","toObject","type","console","log","Enum","defaultValueForField","parseInt","valuesById","first","fromJS","LocalStorage","loadProtosFromStorage","rawStoredProtos","parse","window","localStorage","getItem","saveProtosToStorage","toJSON","setItem","shortid","ProtoConvert","MessageBuilderScaffold","undefined","this","props","messageToBuild","react_default","a","createElement","Fragment","MessageBuilder_MessageFieldsBuilder","path","values","callbacks","MessageBuilder_Output","builtMessage","buildMessageUpToDate","React","Component","Output","event","onSetOutputFormat","target","onBuild","_this","handleChangeOutputFormat","bind","handleBuild","onChange","onClick","cols","rows","readOnly","disabled","MessageFieldsBuilder","_this2","slicedToArray","MessageBuilder_MessageFieldValuesBuilder","concat","MessageFieldValuesBuilder","onAdd","generate","index","onDelete","set","onMove","_this3","showSet","showAdd","showDuplicate","showMove","enableMoveDown","enableMoveUp","handleDelete","handleDuplicate","hidden","handleMoveDown","handleMoveUp","MessageBuilder_MessageFieldInput","handleSet","MessageFieldInput","MessageBuilder_MessageTextInput","MessageBuilder_MessageBytesInput","MessageBuilder_MessageIntInput","MessageBuilder_MessageBoolInput","MessageBuilder_MessageEnumInput","MessageTextInput","onSet","_this4","handleChange","MessageBytesInput","_this5","MessageIntInput","_this6","MessageBoolInput","checked","_this7","MessageEnumInput","_this8","defaultValue","toJS","ProtoNamespace","nested","namespace","namespaces","filter","Namespace","types","onRemoveProto","removable","onSelectMessageToBuild","buildable","_ref5","_ref6","file","_ref7","_ref8","ProtoLibrary_ProtoMessage","ProtoMessage","ProtoLibrary_ProtoNamespace","ProtoFile","contents","root","ProtoLibrary","protoFiles","entrySeq","_ref9","_ref10","ProtoLibrary_ProtoFile","ProtoLibrary_ProtoInput","ProtoLibrary_ProtoUpload","ProtoInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isAdding","setState","fileName","refs","protoContent","protoText","onAddProto","ref","handleSubmit","handleStartAdding","ProtoUpload","files","self","reader","FileReader","onload","text","result","onerror","err","readAsText","fileuploader","click","handleFileChange","parseStoredProto","proto","filename","updateIn","parsedProto","keepCase","resolveAll","Main","storedProtos","outputFormat","parsedContent","setIn","delete","messageBuildTimer","kind","data","buildMessage","blob","Blob","location","URL","createObjectURL","arguments","push","scheduleBuildMessage","deleteIn","fromIndex","toIndex","list","movedEntry","insert","prevProps","prevState","prevTimeout","clearTimeout","setTimeout","parent","libraryCallbacks","handleAddProto","handleRemoveProto","handleSelectMessageToBuild","messageBuilderCallbacks","handleAddToMessage","handleDeleteFromMessage","handleSetInMessage","handleMoveInMessage","handleSetOutputFormat","handleBuildMessage","className","MessageBuilder","fullMessageDescriptorName","view_ProtoLibrary","ReactDOM","render","view_Main","document","getElementById"],"mappings":"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","file":"static/js/main.6892c971.chunk.js","sourcesContent":["const protobuf = require(\"protobufjs\");\r\nconst { List, Map } = require('immutable');\r\n\r\nconst converters = {\r\n  'binary': ['Binary', messageToBinary],\r\n  'binary-hex': ['Binary (hex)', messageToBinaryHex],\r\n  'binary-b64': ['Binary (base64)', messageToBinaryBase64],\r\n  'json': ['Json', messageToJson],\r\n  'json-camel': ['Json (camelCase)', messageToJsonCamelCase],\r\n  'json-id': ['Json (field-IDs)', messageToJsonIds],\r\n};\r\n\r\nconst converterFormats = Object.keys(converters).sort();\r\n\r\nfunction converterName(format) {\r\n  return converters[format][0];\r\n}\r\n\r\nfunction convert(format, messageDescriptor, message) {\r\n  return converters[format][1](messageDescriptor, message);\r\n}\r\n\r\nfunction messageToBinary(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  return messageDescriptor.encode(protoMessage).finish();\r\n}\r\n\r\nfunction messageToBinaryHex(messageDescriptor, message) {\r\n  const binaryMessage = messageToBinary(messageDescriptor, message);\r\n  const hex = Array.from(binaryMessage).map((b) =>\r\n    ((b < 0x10) ? '0' : '') + b.toString(16)\r\n  );\r\n  return hex.join('').toUpperCase();\r\n}\r\n\r\nfunction messageToBinaryBase64(messageDescriptor, message) {\r\n  const binaryMessage = messageToBinary(messageDescriptor, message);\r\n  return protobuf.util.base64.encode(binaryMessage, 0, binaryMessage.length);\r\n}\r\n\r\nfunction messageToJson(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  return JSON.stringify(protoMessage);\r\n}\r\n\r\nfunction messageToJsonCamelCase(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  const camelCaseMessage = replaceFieldNames(\r\n    messageDescriptor,\r\n    protoMessage,\r\n    (fieldName) => protobuf.util.camelCase(fieldName)\r\n  );\r\n  return JSON.stringify(camelCaseMessage);\r\n}\r\n\r\nfunction messageToJsonIds(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  const pbJsonMessage = replaceFieldNames(\r\n    messageDescriptor, protoMessage, (fieldName, field) => field.id);\r\n  return JSON.stringify(pbJsonMessage);\r\n}\r\n\r\nfunction replaceFieldNames(messageDescriptor, protoMessage, replacementFunc) {\r\n  return Object.fromEntries(Object.entries(protoMessage).map(([k, v]) => {\r\n    const field = messageDescriptor.fields[k];\r\n    const newName = replacementFunc(k, field);\r\n    if (field.resolvedType && field.resolvedType.constructor === protobuf.Type) {\r\n      if (field.repeated) {\r\n        return [\r\n          newName,\r\n          v.map((value) => replaceFieldNames(field.resolvedType, value, replacementFunc))\r\n        ];\r\n      } else {\r\n        return [newName, replaceFieldNames(field.resolvedType, v, replacementFunc)];\r\n      }\r\n    } else {\r\n      return [newName, v];\r\n    }\r\n  }));\r\n}\r\n\r\nfunction messageToProto(messageDescriptor, message) {\r\n  const messageObject = messageToProtoInternal(messageDescriptor, message);\r\n  return messageDescriptor.fromObject(messageObject);\r\n}\r\n\r\nfunction messageToProtoInternal(messageDescriptor, message) {\r\n  return message.mapEntries(([key, valueEntries]) => {\r\n    const field = messageDescriptor.fieldsById[key];\r\n    return [field.name, valueEntriesToProto(field, valueEntries)];\r\n  }).toObject();\r\n}\r\n\r\nfunction valueEntriesToProto(field, valueEntries) {\r\n  if (field.repeated) {\r\n    return valueEntries.map(valueEntry =>\r\n      valueToProto(field, valueEntry.get('value'))\r\n    ).toArray();\r\n  } else if (valueEntries.size === 1) {\r\n    return valueToProto(field, valueEntries.get(0).get('value'));\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction valueToProto(field, value) {\r\n  switch (field.type) {\r\n    case \"string\":\r\n      return value;\r\n    case \"bytes\":\r\n      return value;\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n      return value;\r\n    case \"bool\":\r\n      return value;\r\n    default:\r\n      break;\r\n  }\r\n  const resolvedType = field.resolvedType;\r\n  if (resolvedType === null) {\r\n    console.log(\"Unhandled value type\", field);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return value;\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return messageToProtoInternal(resolvedType, value);\r\n  }\r\n  console.log(\"Unhandled value type\", field);\r\n  return \"\";\r\n}\r\n\r\nfunction defaultValueForField(field) {\r\n  switch (field.type) {\r\n    case \"string\":\r\n    case \"bytes\":\r\n      return \"\";\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n      return \"0\"\r\n    case \"bool\":\r\n      return false;\r\n    default:\r\n      break;\r\n  }\r\n  const resolvedType = field.resolvedType;\r\n  if (resolvedType === null) {\r\n    console.log(\"Unhandled default type\", field);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return parseInt(List(Object.keys(resolvedType.valuesById)).sort().first(), 10);\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return Map();\r\n  }\r\n  console.log(\"Unhandled default type\", field);\r\n  return \"\";\r\n}\r\n\r\nexport { converterFormats, converterName, convert, defaultValueForField, messageToProto };\r\n","const { fromJS } = require('immutable');\r\n\r\nfunction loadProtosFromStorage() {\r\n  const rawStoredProtos = fromJS(JSON.parse(window.localStorage.getItem('stored_protos') || \"{}\"));\r\n\r\n  console.log('rawStoredProtos', rawStoredProtos);\r\n\r\n  return rawStoredProtos;\r\n}\r\n\r\nfunction saveProtosToStorage(rawStoredProtos) {\r\n  console.log('SAVING:', rawStoredProtos.toJSON());\r\n  window.localStorage.setItem('stored_protos', JSON.stringify(rawStoredProtos.toJSON()));\r\n}\r\n\r\nexport default { loadProtosFromStorage, saveProtosToStorage }\r\n","import React from 'react';\r\nconst protobuf = require(\"protobufjs\");\r\nconst shortid = require('shortid');\r\nconst ProtoConvert = require('../ProtoConvert')\r\n\r\nconst { List, Map } = require('immutable');\r\n\r\nclass MessageBuilderScaffold extends React.Component {\r\n  render() {\r\n    if (this.props.messageToBuild === undefined) {\r\n      return null;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          {this.props.messageToBuild.name} builder\r\n        </h1>\r\n        <MessageFieldsBuilder\r\n          path={List()}\r\n          fields={this.props.messageToBuild.fields}\r\n          values={this.props.message}\r\n          callbacks={this.props.callbacks} />\r\n        <Output\r\n          builtMessage={this.props.builtMessage}\r\n          buildMessageUpToDate={this.props.buildMessageUpToDate}\r\n          callbacks={this.props.callbacks} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Output extends React.Component {\r\n  handleChangeOutputFormat(event) {\r\n    this.props.callbacks.onSetOutputFormat(event.target.value);\r\n  }\r\n\r\n  handleBuild(type) {\r\n    this.props.callbacks.onBuild(type);\r\n  }\r\n\r\n  render() {\r\n    const handleChangeOutputFormat = this.handleChangeOutputFormat.bind(this);\r\n    const handleBuild = (type) => () => this.handleBuild(type);\r\n    return (\r\n      <React.Fragment>\r\n        <select onChange={handleChangeOutputFormat}>\r\n          {ProtoConvert.converterFormats.map(key =>\r\n            <option key={key} value={key}>\r\n              {ProtoConvert.converterName(key)}\r\n            </option>\r\n          )}\r\n        </select>\r\n        <button onClick={handleBuild('copy')}> Copy </button>\r\n        <button onClick={handleBuild('save')}> Save as file </button>\r\n        <br/>\r\n        <textarea\r\n          value={this.props.builtMessage}\r\n          cols=\"200\"\r\n          rows=\"3\"\r\n          readOnly\r\n          disabled={!this.props.buildMessageUpToDate} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldsBuilder extends React.Component {\r\n  render() {\r\n    return (\r\n      <ol>\r\n        {Object.entries(this.props.fields)\r\n         .map(\r\n          ([fieldName, field]) =>\r\n            <li key={fieldName} value={field.id}>\r\n              <b>{field.type}</b> - {field.name}\r\n              <MessageFieldValuesBuilder\r\n                path={this.props.path.concat([field.id])}\r\n                field={field}\r\n                valueEntries={this.props.values.get(field.id) || List()}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n        )}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass MessageFieldValuesBuilder extends React.Component{\r\n  handleSet() {\r\n    this.props.callbacks.onAdd(\r\n      this.props.path,\r\n      Map({\r\n        'id': shortid.generate(),\r\n        'value': ProtoConvert.defaultValueForField(this.props.field)\r\n      }));\r\n  }\r\n\r\n  handleDelete(index) {\r\n    this.props.callbacks.onDelete(this.props.path.concat([index]))\r\n  }\r\n\r\n  handleDuplicate(valueEntry) {\r\n    this.props.callbacks.onAdd(\r\n      this.props.path,\r\n      valueEntry.set('id', shortid.generate())\r\n    );\r\n  }\r\n\r\n  handleMoveUp(index) {\r\n    this.props.callbacks.onMove(this.props.path, index, index - 1);\r\n  }\r\n\r\n  handleMoveDown(index) {\r\n    this.props.callbacks.onMove(this.props.path, index, index + 1);\r\n  }\r\n\r\n  render() {\r\n    const showSet = this.props.valueEntries.size === 0;\r\n    const showAdd = this.props.field.repeated;\r\n    const showDuplicate = this.props.field.repeated;\r\n    const showMove = this.props.field.repeated;\r\n\r\n    return (\r\n      <ul>\r\n        {this.props.valueEntries.map((valueEntry, index) => {\r\n          const enableMoveDown = index !== this.props.valueEntries.size - 1;\r\n          const enableMoveUp = index !== 0;\r\n          return <li key={valueEntry.get('id')} >\r\n            <button onClick={() => this.handleDelete(index)}> - </button>\r\n            <button\r\n              onClick={() => this.handleDuplicate(valueEntry)}\r\n              hidden={!showDuplicate}>\r\n              *\r\n            </button>\r\n            <button\r\n              onClick={() => this.handleMoveDown(index)}\r\n              hidden={!showMove}\r\n              disabled={!enableMoveDown}>\r\n              v\r\n            </button>\r\n            <button\r\n              onClick={() => this.handleMoveUp(index)}\r\n              hidden={!showMove}\r\n              disabled={!enableMoveUp}>\r\n              ^\r\n            </button>\r\n            <MessageFieldInput\r\n              path={this.props.path.concat([index, 'value'])}\r\n              field={this.props.field}\r\n              value={valueEntry.get('value')}\r\n              callbacks={this.props.callbacks} />\r\n          </li>\r\n        })}\r\n        {(showAdd || showSet) &&\r\n          <li>\r\n            <button onClick={() => this.handleSet()}> {(showAdd) ? 'add' : 'set'} </button>\r\n          </li>\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldInput extends React.Component {\r\n  render() {\r\n    const fieldType = this.props.field.type;\r\n    switch (fieldType) {\r\n      case \"string\":\r\n        return <MessageTextInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"bytes\":\r\n        return <MessageBytesInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"int32\":\r\n      case \"int64\":\r\n      case \"sint32\":\r\n      case \"sint64\":\r\n      case \"uint32\":\r\n      case \"uint64\":\r\n      case \"fixed32\":\r\n      case \"fixed64\":\r\n      case \"float\":\r\n      case \"double\":\r\n        return <MessageIntInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"bool\":\r\n        return <MessageBoolInput\r\n          path={this.props.path}\r\n          field={this.props.field}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      default:\r\n        break;\r\n    }\r\n    const resolvedType = this.props.field.resolvedType;\r\n    if (resolvedType.constructor === protobuf.Enum) {\r\n      return <MessageEnumInput\r\n        path={this.props.path}\r\n        field={this.props.field}\r\n        type={resolvedType}\r\n        value={this.props.value}\r\n        callbacks={this.props.callbacks} />\r\n    } else if (resolvedType.constructor === protobuf.Type) {\r\n      return <MessageFieldsBuilder\r\n        path={this.props.path}\r\n        fields={resolvedType.fields}\r\n        values={this.props.value}\r\n        callbacks={this.props.callbacks} />\r\n    }\r\n    console.log(\"Unhandled input type\", this.props.field.type);\r\n    return <div/>\r\n  }\r\n}\r\n\r\nclass MessageTextInput extends React.Component {\r\n  handleChange(event) {\r\n    // console.log('MessageTextInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return <textarea onChange={(event) => this.handleChange(event)} value={this.props.value} />\r\n  }\r\n}\r\n\r\nclass MessageBytesInput extends React.Component {\r\n  handleChange(event) {\r\n    // console.log(\"MessageBytesInput change\", this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return <textarea onChange={(event) => this.handleChange(event)} value={this.props.value} />\r\n  }\r\n\r\n}\r\n\r\nclass MessageIntInput extends React.Component {\r\n  handleChange(event) {\r\n    // console.log('MessageIntInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return <input type=\"text\" onChange={(event) => this.handleChange(event)} value={this.props.value} />\r\n  }\r\n}\r\n\r\nclass MessageBoolInput extends React.Component {\r\n  handleChange(event) {\r\n    console.log('MessageBoolInput', this.props.path, event.target.checked);\r\n    this.props.callbacks.onSet(this.props.path, event.target.checked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={this.props.value}\r\n        onChange={(event) => this.handleChange(event)} />\r\n    )\r\n  }\r\n}\r\n\r\nclass MessageEnumInput extends React.Component {\r\n  handleChange(event) {\r\n    const value = parseInt(event.target.value);\r\n    console.log('MessageEnumInput.change', this.props.path, typeof(value), value);\r\n    this.props.callbacks.onSet(this.props.path, value);\r\n  }\r\n\r\n  render() {\r\n    const keys = List(Object.keys(this.props.type.valuesById)).sort();\r\n    return (\r\n      <select defaultValue={this.props.value} onChange={(event) => this.handleChange(event)}>\r\n        {keys.map(key => (\r\n          <option value={key} key={key}>\r\n            {this.props.type.valuesById[key]} = {key}\r\n          </option>\r\n        )).toJS()}\r\n      </select>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessageBuilderScaffold;\r\n","import React from 'react';\r\nconst protobuf = require(\"protobufjs\");\r\n\r\nclass ProtoNamespace extends React.Component {\r\n  render() {\r\n    const nested = this.props.namespace['nested'] || {};\r\n    const entries = Object.entries(nested);\r\n    const namespaces = entries.filter(([k, v]) => v.constructor === protobuf.Namespace);\r\n    const types = entries.filter(([k, v]) => v.constructor === protobuf.Type);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          onClick={() => this.props.callbacks.onRemoveProto(this.props.name)}\r\n          hidden={!this.props.removable}>\r\n           -\r\n        </button>\r\n        {this.props.name}\r\n        <button\r\n          onClick={() => this.props.callbacks.onSelectMessageToBuild(this.props.namespace)}\r\n          hidden={!this.props.buildable}>\r\n          build\r\n        </button>\r\n        <ul>\r\n          {namespaces.map(([k ,v]) =>\r\n            <li key={k} >\r\n              <ProtoNamespace\r\n                file={this.props.file}\r\n                name={k}\r\n                namespace={v}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n          )}\r\n          {types.map(([k, v]) =>\r\n            <li key={k}>\r\n              <ProtoMessage\r\n                file={this.props.file}\r\n                message={v}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n           )}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoMessage extends React.Component {\r\n render() {\r\n   return (\r\n    <ProtoNamespace\r\n      file={this.props.file}\r\n      name={this.props.message.name}\r\n      namespace={this.props.message}\r\n      buildable={true}\r\n      callbacks={this.props.callbacks} />);\r\n  }\r\n}\r\n\r\nclass ProtoFile extends React.Component {\r\n  render() {\r\n    return <ProtoNamespace\r\n      file={this.props.name}\r\n      name={this.props.name}\r\n      namespace={this.props.contents.root}\r\n      removable={true}\r\n      callbacks={this.props.callbacks} />\r\n  }\r\n}\r\n\r\nclass ProtoLibrary extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          Proto library\r\n        </h1>\r\n        <ul>\r\n          {\r\n            this.props.protoFiles.entrySeq().map(\r\n              ([k, v]) =>\r\n                <li key={k}>\r\n                  <ProtoFile\r\n                    name={k}\r\n                    contents={v.get('contents')}\r\n                    callbacks={this.props.callbacks} />\r\n                </li>\r\n            ).toJS()\r\n           }\r\n        </ul>\r\n        <ProtoInput callbacks={this.props.callbacks} />\r\n        <ProtoUpload callbacks={this.props.callbacks} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdding: false\r\n    }\r\n  }\r\n\r\n  handleStartAdding() {\r\n    this.setState({isAdding: true});\r\n  }\r\n\r\n  handleSubmit() {\r\n    const fileName = this.refs.fileName.value;\r\n    const protoContent = this.refs.protoText.value;\r\n    this.setState({isAdding: false});\r\n    this.props.callbacks.onAddProto(fileName, protoContent);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isAdding) {\r\n      return <button onClick={() => this.handleStartAdding()} > Add </button>\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        File name: <input type=\"text\" ref=\"fileName\" /> <br />\r\n        ProtoContent: <br />\r\n        <textarea ref=\"protoText\"/> <br />\r\n        <button onClick={() => this.handleSubmit()} > Submit </button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nclass ProtoUpload extends React.Component {\r\n  handleFileChange(event) {\r\n    const file = event.target.files[0];\r\n    const self = this;\r\n    const reader = new FileReader();\r\n    reader.onload = function() {\r\n      const text = reader.result;\r\n      self.props.callbacks.onAddProto(file.name, text);\r\n    };\r\n    reader.onerror = function(err) {\r\n      console.log('FileLoading of', file, 'failed:', err);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={() => this.refs.fileuploader.click()}>\r\n          From disk\r\n        </button>\r\n        <input\r\n          type=\"file\"\r\n          ref=\"fileuploader\"\r\n          onChange={(event) => this.handleFileChange(event)}\r\n          hidden />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtoLibrary;\r\n","import React from 'react';\r\nimport LocalStorage from '../LocalStorage'\r\nimport MessageBuilderScaffold from './MessageBuilder';\r\nimport ProtoLibrary from './ProtoLibrary';\r\nconst ProtoConvert = require('../ProtoConvert')\r\nconst protobuf = require(\"protobufjs\");\r\nconst { List, Map } = require('immutable');\r\n\r\n/*\r\nwindow.localStorage.setItem('stored_protos', JSON.stringify({\r\n  'awesome.proto': {\r\n    'contents': '// awesome.proto\\npackage awesomepackage;\\nsyntax = \"proto3\";\\nmessage AwesomeMessage {\\n  string awesome_field = 2;\\n}'\r\n  }\r\n}))\r\n/**/\r\n\r\nfunction parseStoredProto(proto, filename) {\r\n  console.log('protobuf', protobuf);\r\n  return proto.updateIn(\r\n    ['contents'],\r\n    (contents) => {\r\n      protobuf.parse.filename = filename;\r\n      const parsedProto = protobuf.parse(contents, { keepCase: true });\r\n      parsedProto.root.resolveAll();\r\n      return parsedProto;\r\n    }\r\n  );\r\n}\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rawStoredProtos: Map(),\r\n      storedProtos: Map(),\r\n      message: Map(),\r\n      outputFormat: 'binary',\r\n      builtMessage: '',\r\n    }\r\n  }\r\n\r\n  handleAddProto(fileName, protoContent) {\r\n    const parsedContent = protobuf.parse(protoContent, { keepCase: true });\r\n    this.setState((state) => ({\r\n      rawStoredProtos: state.rawStoredProtos.setIn([fileName], Map({contents: protoContent})),\r\n      storedProtos: state.storedProtos.setIn([fileName], Map({contents: parsedContent})),\r\n    }));\r\n  }\r\n\r\n  handleRemoveProto(fileName) {\r\n    // console.log('handleRemoveProto', this.state.rawStoredProtos.toString());\r\n    this.setState((state) => ({\r\n      rawStoredProtos: state.rawStoredProtos.delete(fileName),\r\n      storedProtos: state.storedProtos.delete(fileName),\r\n    }));\r\n  }\r\n\r\n  handleSelectMessageToBuild(messageToBuild) {\r\n    this.setState({\r\n      messageToBuild,\r\n      message: Map(),\r\n      builtMessage: '',\r\n      messageBuildTimer: null,\r\n    });\r\n  }\r\n\r\n  handleSetOutputFormat(outputFormat) {\r\n    this.setState({\r\n      outputFormat,\r\n      builtMessage: ProtoConvert.convert(\r\n        outputFormat,\r\n        this.state.messageToBuild,\r\n        this.state.message),\r\n    });\r\n  }\r\n\r\n  handleBuildMessage(kind) {\r\n    console.log('Will', kind, 'as', this.state.outputFormat);\r\n\r\n    const data = this.buildMessage();\r\n    // console.log('data', data);\r\n\r\n    if (kind === 'copy') {\r\n      // TODO(sandra): implement\r\n    } else if (kind === 'save') {\r\n      // TODO(sandra): improve\r\n      const blob = new Blob([data], {type: 'application/octet-stream'});\r\n      window.location = window.URL.createObjectURL(blob);\r\n    } else {\r\n      console.log('Unhandled build kind:', kind);\r\n    }\r\n  }\r\n\r\n  handleAddToMessage(path, valueEntry) {\r\n    // console.log('handleAddToMessage', this.state.message, path.toString(), valueEntry);\r\n    this.setState((state) => ({\r\n      message: state.message.updateIn(\r\n        path,\r\n        (list = List()) => list.push(valueEntry)\r\n      ),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  handleDeleteFromMessage(path) {\r\n    // console.log('handleDeleteFromMessage', this.state.message, path.toString());\r\n    this.setState((state) => ({\r\n      message: state.message.deleteIn(path),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  handleSetInMessage(path, valueEntry) {\r\n    // console.log('handleSetInMessage', this.state.message, path.toString(), valueEntry);\r\n    this.setState((state) => ({\r\n      message: state.message.setIn(path, valueEntry),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  handleMoveInMessage(path, fromIndex, toIndex) {\r\n    this.setState((state) => ({\r\n      message: state.message.updateIn(\r\n        path,\r\n        (list = List()) => {\r\n          const movedEntry = list.get(fromIndex);\r\n          return list.delete(fromIndex).insert(toIndex, movedEntry);\r\n        }\r\n      ),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rawStoredProtos = LocalStorage.loadProtosFromStorage();\r\n    const storedProtos = rawStoredProtos.map(parseStoredProto);\r\n\r\n    console.log(\"storedProtos\", storedProtos);\r\n    this.setState({\r\n      rawStoredProtos,\r\n      storedProtos\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.rawStoredProtos !== this.state.rawStoredProtos) {\r\n      LocalStorage.saveProtosToStorage(this.state.rawStoredProtos);\r\n    }\r\n  }\r\n\r\n  scheduleBuildMessage(prevTimeout) {\r\n    clearTimeout(prevTimeout);\r\n    return setTimeout(() =>\r\n      this.setState({\r\n        builtMessage: ProtoConvert.convert(\r\n          this.state.outputFormat,\r\n          this.state.messageToBuild,\r\n          this.state.message),\r\n        messageBuildTimer: null\r\n      }),\r\n      500\r\n    );\r\n  }\r\n\r\n  fullMessageDescriptorName(messageDescriptor) {\r\n    if (!messageDescriptor) {\r\n      return \"\";\r\n    }\r\n    var name = messageDescriptor.name;\r\n    while (messageDescriptor.parent && messageDescriptor.parent.name) {\r\n      name = messageDescriptor.parent.name + '.' + name;\r\n      messageDescriptor = messageDescriptor.parent;\r\n    }\r\n    name = messageDescriptor.filename + ':' + name;\r\n    return name;\r\n  }\r\n\r\n  render() {\r\n    const libraryCallbacks = {\r\n      onAddProto: this.handleAddProto.bind(this),\r\n      onRemoveProto: this.handleRemoveProto.bind(this),\r\n      onSelectMessageToBuild: this.handleSelectMessageToBuild.bind(this),\r\n    };\r\n    const messageBuilderCallbacks = {\r\n      onAdd: this.handleAddToMessage.bind(this),\r\n      onDelete: this.handleDeleteFromMessage.bind(this),\r\n      onSet: this.handleSetInMessage.bind(this),\r\n      onMove: this.handleMoveInMessage.bind(this),\r\n      onSetOutputFormat: this.handleSetOutputFormat.bind(this),\r\n      onBuild: this.handleBuildMessage.bind(this),\r\n    };\r\n\r\n    return (\r\n      <div className=\"protool\">\r\n        <div className=\"message-builder\">\r\n          <MessageBuilderScaffold\r\n            key={this.fullMessageDescriptorName(this.state.messageToBuild)}\r\n            messageToBuild={this.state.messageToBuild}\r\n            message={this.state.message}\r\n            builtMessage={this.state.builtMessage}\r\n            buildMessageUpToDate={this.state.messageBuildTimer === null}\r\n            callbacks={messageBuilderCallbacks} />\r\n        </div>\r\n        <div className=\"proto-library\">\r\n          <ProtoLibrary\r\n            protoFiles={this.state.storedProtos}\r\n            callbacks={libraryCallbacks} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './view/Main';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Main />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}