{"version":3,"sources":["ProtoConvert.js","LocalStorage.js","view/MessageBuilder.js","view/ProtoLibrary.js","view/Main.js","index.js"],"names":["require","List","Map","protobuf","shortid","converters","binary","messageToBinary","messageFromBinary","binary-hex","messageDescriptor","message","binaryMessage","Array","from","map","b","toString","join","toUpperCase","hexMessage","binaryMessageArray","i","length","push","parseInt","substring","Uint8Array","binary-b64","util","base64","encode","base64Message","window","atob","json","protoMessage","messageToProto","JSON","stringify","jsonMessage","parse","asUTF8","messageFromProtoMessage","json-camel","camelCaseMessage","replaceFieldNames","toObject","toJSONOptions","fieldName","camelCase","jsonCamelCaseMessage","reverseReplaceFieldNames","camelCaseFieldName","json-id","pbJsonMessage","fields","id","jsonIdsMessage","idsMessage","fieldId","converterFormats","Object","keys","sort","converterName","format","converterExtension","convertTo","finish","replacementFunc","fromEntries","entries","_ref","_ref2","G_devel_Javascript_protool_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","k","v","newName","fieldDescriptor","resolvedType","constructor","Type","repeated","value","messageObject","messageToProtoInternal","fromObject","mapEntries","_ref3","_ref4","key","valueEntries","fieldsById","name","valueEntry","valueToProto","keyType","get","type","toArray","size","valueEntriesToProto","fieldType","console","error","Enum","convertFrom","encodedMessage","decode","data","TextDecoder","convertedMessage","convertFunc","convertedKey","findConvertedKey","options","_ref5","_ref6","_ref7","_ref8","generate","valueFromProto","values","valueEntriesFromProto","protoValue","defaultValueEntryForField","valueObject","defaultValueForFieldType","valuesById","first","fromJS","LocalStorage","load","rawStoredProtos","localStorage","getItem","log","save","isEmpty","toJSON","removeItem","setItem","ProtoConvert","MessageBuilderScaffold","undefined","this","props","react_default","a","createElement","Fragment","MessageBuilder_MessageFieldsBuilder","path","callbacks","MessageBuilder_Output","builtMessage","buildMessageUpToDate","React","Component","Output","handleExportToFile","_this","onExport","handleChangeFormat","event","onSetFormat","target","handleFileChange","file","files","reader","FileReader","onload","fileData","result","onImport","onerror","err","readAsArrayBuffer","handleImportFromFile","refs","fileuploader","click","handleChangeBuiltMessage","split","errorMessage","onChange","defaultValue","onClick","ref","hidden","cols","rows","className","disabled","MessageFieldsBuilder","isRegularField","partOf","fieldTypeName","required","_this3","regularFieldDescriptors","filter","oneOfDescriptors","oneofs","regularFieldItems","MessageBuilder_MessageFieldValuesBuilder","concat","oneOfItems","oneOfDescriptor","MessageBuilder_MessageOneOfFieldValuesBuilder","MessageFieldValuesBuilder","handleSet","_this4","onAdd","_this5","showSet","showAdd","index","MessageBuilder_MessageFieldValueBuilder","numEntries","MessageFieldValueBuilder","handleDelete","_this6","onDelete","handleDuplicate","set","handleMoveUp","onMove","handleMoveDown","showDelete","showDuplicate","showMove","enableMoveDown","enableMoveUp","MessageBuilder_MessageFieldInput","MessageOneOfFieldValuesBuilder","currentFieldDescriptor","maybeCurrentFieldId","_this7","keySeq","find","newFieldId","newFieldDescriptor","maybeCurrentFieldDescriptor","fieldsArray","MessageFieldInput","MessageBuilder_MessageTextInput","MessageBuilder_MessageBytesInput","MessageBuilder_MessageIntInput","MessageBuilder_MessageFloatInput","MessageBuilder_MessageBoolInput","MessageBuilder_MessageEnumInput","MessageTextInput","handleChange","_this8","onSet","MessageBytesInput","isValid","test","_this9","MessageIntInput","_this10","MessageFloatInput","_this11","MessageBoolInput","_this12","checked","MessageEnumInput","_this13","_this14","ProtoLibrary","ProtoLibrary_ProtoRoot","protoRoot","ProtoLibrary_ProtoFiles","filenames","fileDependencies","ProtoLibrary_ProtoInput","ProtoLibrary_ProtoUpload","ProtoRoot","ProtoLibrary_ProtoNamespace","namespace","ProtoNamespace","handleBuild","onSelectMessageDescriptor","_this2","nested","namespaces","slicedToArray","Namespace","types","baseName","_namespaces$","subNamespaceName","subNamespace","_types$","subMessageName","subMessage","ProtoLibrary_ProtoMessage","buildable","ProtoMessage","ProtoFiles","filename","ProtoLibrary_ProtoFile","ProtoFile","handleClick","onRemoveProto","fileDependents","importingFiles","ProtoInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleStartAdding","setState","isAdding","handleSubmit","fileName","protoContent","protoText","onAddProto","state","ProtoUpload","text","readAsText","FileSaver","loadStoredProtos","isNode","fs","readFileSync","storedProto","Error","Root","toList","loadSync","toJS","keepCase","flatMap","imports","importName","groupBy","importNameAndFilenames","toSet","resolveAll","Main","handleAddProto","setIn","contents","_loadStoredProtos","handleRemoveProto","delete","_loadStoredProtos2","handleSelectMessageDescriptor","messageBuildTimer","handleSetFormat","handleExportMessage","kind","extension","blob","Blob","saveAs","handleImportMessage","handleAddToMessage","updateIn","arguments","scheduleBuildMessage","handleDeleteFromMessage","listPath","pop","listKey","last","messagePath","deleteIn","handleSetInMessage","handleMoveInMessage","fromIndex","toIndex","list","movedEntry","insert","prevTimeout","clearTimeout","setTimeout","fullMessageDescriptorName","parent","libraryCallbacks","messageBuilderCallbacks","_loadStoredProtos3","prevProps","prevState","MessageBuilder","view_ProtoLibrary","ReactDOM","render","view_Main","document","getElementById"],"mappings":"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","file":"static/js/main.4e791250.chunk.js","sourcesContent":["const { List, Map } = require('immutable');\r\nconst protobuf = require(\"protobufjs\");\r\nconst shortid = require('shortid');\r\n\r\nconst converters = {\r\n  'binary': ['Binary', 'pbdata', messageToBinary, messageFromBinary],\r\n  'binary-hex': ['Binary (hex)', 'pbdata.hex', messageToBinaryHex, messageFromBinaryHex],\r\n  'binary-b64': ['Binary (base64)', 'pbdata.b64', messageToBinaryBase64, messageFromBinaryBase64],\r\n  'json': ['Json', 'json', messageToJson, messageFromJson],\r\n  'json-camel': ['Json (camelCase)', 'cc.json', messageToJsonCamelCase, messageFromJsonCamelCase],\r\n  'json-id': ['Json (field-IDs)', 'ids.json', messageToJsonIds, messageFromJsonIds],\r\n};\r\n\r\nconst converterFormats = Object.keys(converters).sort();\r\n\r\nfunction converterName(format) {\r\n  return converters[format][0];\r\n}\r\n\r\nfunction converterExtension(format) {\r\n  return converters[format][1];\r\n}\r\n\r\nfunction convertTo(format, messageDescriptor, message) {\r\n  return converters[format][2](messageDescriptor, message);\r\n}\r\n\r\nfunction messageToBinary(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  return messageDescriptor.encode(protoMessage).finish();\r\n}\r\n\r\nfunction messageToBinaryHex(messageDescriptor, message) {\r\n  const binaryMessage = messageToBinary(messageDescriptor, message);\r\n  const hex = Array.from(binaryMessage).map((b) =>\r\n    ((b < 0x10) ? '0' : '') + b.toString(16)\r\n  );\r\n  return hex.join('').toUpperCase();\r\n}\r\n\r\nfunction messageToBinaryBase64(messageDescriptor, message) {\r\n  const binaryMessage = messageToBinary(messageDescriptor, message);\r\n  return protobuf.util.base64.encode(binaryMessage, 0, binaryMessage.length);\r\n}\r\n\r\nfunction messageToJson(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  return JSON.stringify(protoMessage);\r\n}\r\n\r\nfunction messageToJsonCamelCase(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  const camelCaseMessage = replaceFieldNames(\r\n    messageDescriptor,\r\n    messageDescriptor.toObject(protoMessage, protobuf.util.toJSONOptions),\r\n    (fieldName) => protobuf.util.camelCase(fieldName)\r\n  );\r\n  return JSON.stringify(camelCaseMessage);\r\n}\r\n\r\nfunction messageToJsonIds(messageDescriptor, message) {\r\n  const protoMessage = messageToProto(messageDescriptor, message);\r\n  const pbJsonMessage = replaceFieldNames(\r\n    messageDescriptor,\r\n    messageDescriptor.toObject(protoMessage, protobuf.util.toJSONOptions),\r\n    (fieldName, messageDescriptor) => messageDescriptor.fields[fieldName].id);\r\n  return JSON.stringify(pbJsonMessage);\r\n}\r\n\r\nfunction replaceFieldNames(messageDescriptor, protoMessage, replacementFunc) {\r\n  return Object.fromEntries(Object.entries(protoMessage).map(([k, v]) => {\r\n    const newName = replacementFunc(k, messageDescriptor);\r\n    const fieldDescriptor = messageDescriptor.fields[k] || messageDescriptor.fields[newName];\r\n\r\n    if (fieldDescriptor.resolvedType && fieldDescriptor.resolvedType.constructor === protobuf.Type) {\r\n      if (fieldDescriptor.repeated) {\r\n        return [\r\n          newName,\r\n          v.map((value) => replaceFieldNames(fieldDescriptor.resolvedType, value, replacementFunc))\r\n        ];\r\n      } else {\r\n        return [newName, replaceFieldNames(fieldDescriptor.resolvedType, v, replacementFunc)];\r\n      }\r\n    } else {\r\n      return [newName, v];\r\n    }\r\n  }));\r\n}\r\n\r\nfunction messageToProto(messageDescriptor, message) {\r\n  const messageObject = messageToProtoInternal(messageDescriptor, message);\r\n  return messageDescriptor.fromObject(messageObject);\r\n}\r\n\r\nfunction messageToProtoInternal(messageDescriptor, message) {\r\n  return message.mapEntries(([key, valueEntries]) => {\r\n    const fieldDescriptor = messageDescriptor.fieldsById[key];\r\n    return [fieldDescriptor.name, valueEntriesToProto(fieldDescriptor, valueEntries)];\r\n  }).toObject();\r\n}\r\n\r\nfunction valueEntriesToProto(fieldDescriptor, valueEntries) {\r\n  if (fieldDescriptor.map) {\r\n    return Object.fromEntries(valueEntries.map(valueEntry => [\r\n      valueToProto(fieldDescriptor.keyType, null, valueEntry.get('key')),\r\n      valueToProto(fieldDescriptor.type, fieldDescriptor.resolvedType, valueEntry.get('value')),\r\n    ]).toArray());\r\n  } else if (fieldDescriptor.repeated) {\r\n    return valueEntries.map(valueEntry =>\r\n      valueToProto(fieldDescriptor.type, fieldDescriptor.resolvedType, valueEntry.get('value'))\r\n    ).toArray();\r\n  } else if (valueEntries.size === 1) {\r\n    return valueToProto(fieldDescriptor.type, fieldDescriptor.resolvedType, valueEntries.get(0).get('value'));\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction valueToProto(fieldType, resolvedType, value) {\r\n  switch (fieldType) {\r\n    case \"string\":\r\n    case \"bytes\":\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n    case \"bool\":\r\n      return value;\r\n    default:\r\n      break;\r\n  }\r\n  if (resolvedType === null) {\r\n    console.error(\"Unhandled value type\", fieldType);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return value;\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return messageToProtoInternal(resolvedType, value);\r\n  }\r\n  console.error(\"Unhandled value type\", fieldType);\r\n  return \"\";\r\n}\r\n\r\nfunction convertFrom(format, messageDescriptor, encodedMessage) {\r\n  return converters[format][3](messageDescriptor, encodedMessage);\r\n}\r\n\r\nfunction messageFromBinary(messageDescriptor, binaryMessage) {\r\n  const protoMessage = messageDescriptor.decode(binaryMessage);\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage, {binary: true});\r\n}\r\n\r\nfunction messageFromBinaryHex(messageDescriptor, hexMessage) {\r\n  const binaryMessageArray = []\r\n  for (var i = 0; i < hexMessage.length; i += 2) {\r\n    binaryMessageArray.push(parseInt(hexMessage.substring(i, i + 2), 16));\r\n  }\r\n  return messageFromBinary(messageDescriptor, new Uint8Array(binaryMessageArray));\r\n}\r\n\r\nfunction messageFromBinaryBase64(messageDescriptor, base64Message) {\r\n  const binaryMessage = window.atob(base64Message);\r\n  return messageFromBinary(messageDescriptor, binaryMessage);\r\n}\r\n\r\nfunction asUTF8(data) {\r\n  if (data instanceof Uint8Array) {\r\n    return new TextDecoder('utf-8').decode(data);\r\n  } else {\r\n    return data;\r\n  }\r\n}\r\n\r\nfunction messageFromJson(messageDescriptor, jsonMessage) {\r\n  const protoMessage = JSON.parse(asUTF8(jsonMessage));\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\r\n}\r\n\r\nfunction findConvertedKey(convertedKey, messageDescriptor, convertFunc) {\r\n  for (const key in messageDescriptor.fields) {\r\n    if (convertFunc(key, messageDescriptor).toString() === convertedKey) {\r\n      return key;\r\n    }\r\n  }\r\n  console.error('Failed to match key');\r\n  for (const key in messageDescriptor.fields) {\r\n    console.error('tried', convertFunc(key, messageDescriptor), '===', convertedKey);\r\n  }\r\n  console.error('all false.')\r\n}\r\n\r\nfunction reverseReplaceFieldNames(\r\n  messageDescriptor, convertedMessage, convertFunc) {\r\n    return replaceFieldNames(\r\n      messageDescriptor,\r\n      convertedMessage,\r\n      (convertedKey, messageDescriptor) => findConvertedKey(\r\n        convertedKey, messageDescriptor, convertFunc)\r\n    );\r\n  }\r\n\r\nfunction messageFromJsonCamelCase(messageDescriptor, jsonCamelCaseMessage) {\r\n  const camelCaseMessage = JSON.parse(asUTF8(jsonCamelCaseMessage));\r\n  const protoMessage = reverseReplaceFieldNames(\r\n    messageDescriptor,\r\n    camelCaseMessage,\r\n    (camelCaseFieldName) => {\r\n      return protobuf.util.camelCase(camelCaseFieldName)\r\n    }\r\n  );\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\r\n}\r\n\r\nfunction messageFromJsonIds(messageDescriptor, jsonIdsMessage) {\r\n  const idsMessage = JSON.parse(asUTF8(jsonIdsMessage));\r\n  const protoMessage = reverseReplaceFieldNames(\r\n    messageDescriptor,\r\n    idsMessage,\r\n    (fieldId, messageDescriptor) => messageDescriptor.fields[fieldId].id\r\n  );\r\n  return messageFromProtoMessage(messageDescriptor, protoMessage);\r\n}\r\n\r\nfunction messageFromProtoMessage(messageDescriptor, protoMessage, options) {\r\n  return Map(Object.entries(protoMessage).map(([key, value]) => {\r\n    const fieldDescriptor = messageDescriptor.fields[key];\r\n    return [fieldDescriptor.id, valueEntriesFromProto(fieldDescriptor, value, options)];\r\n  }));\r\n}\r\n\r\nfunction valueEntriesFromProto(fieldDescriptor, value, options) {\r\n  if (fieldDescriptor.map) {\r\n    return List(Object.entries(value).map(([key, value]) => ({\r\n      id: shortid.generate(),\r\n      key: valueFromProto(fieldDescriptor.keyType, null, key),\r\n      value: valueFromProto(fieldDescriptor.type, fieldDescriptor.resolvedType, value),\r\n    })));\r\n  }\r\n  const values = fieldDescriptor.repeated ? value : [value];\r\n  return List(\r\n    values.map(v => (Map({\r\n      id: shortid.generate(),\r\n      value: valueFromProto(fieldDescriptor, v, options)\r\n    })))\r\n  );\r\n}\r\n\r\nfunction valueFromProto(fieldDescriptor, protoValue, options) {\r\n  switch (fieldDescriptor.type) {\r\n    case \"bytes\":\r\n    const binary = options && options.binary;\r\n      return (binary\r\n        ? protobuf.util.base64.encode(protoValue, 0, protoValue.length)\r\n        : protoValue\r\n      );\r\n\r\n    case \"string\":\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n    case \"bool\":\r\n      return protoValue;\r\n    default:\r\n      break;\r\n  }\r\n  const resolvedType = fieldDescriptor.resolvedType;\r\n  if (resolvedType === null) {\r\n    console.error(\"Unhandled value type\", fieldDescriptor);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return protoValue;\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return messageFromProtoMessage(resolvedType, protoValue, options);\r\n  }\r\n  console.error(\"Unhandled value type\", fieldDescriptor);\r\n  return \"\";\r\n}\r\n\r\nfunction defaultValueEntryForField(fieldDescriptor) {\r\n  var valueObject = {\r\n    id: shortid.generate(),\r\n    value: defaultValueForFieldType(fieldDescriptor.type, fieldDescriptor.resolvedType)\r\n  };\r\n  if (fieldDescriptor.map) {\r\n    valueObject.key = defaultValueForFieldType(fieldDescriptor.keyType, null);\r\n  }\r\n  return Map(valueObject);\r\n}\r\n\r\nfunction defaultValueForFieldType(fieldType, resolvedType) {\r\n  switch (fieldType) {\r\n    case \"string\":\r\n    case \"bytes\":\r\n      return \"\";\r\n    case \"int32\":\r\n    case \"int64\":\r\n    case \"sint32\":\r\n    case \"sint64\":\r\n    case \"uint32\":\r\n    case \"uint64\":\r\n    case \"fixed32\":\r\n    case \"fixed64\":\r\n    case \"float\":\r\n    case \"double\":\r\n      return \"0\"\r\n    case \"bool\":\r\n      return false;\r\n    default:\r\n      break;\r\n  }\r\n  if (resolvedType === null) {\r\n    console.error(\"Unhandled default type, expected resolved type\", fieldType);\r\n    return \"\";\r\n  }\r\n  if (resolvedType.constructor === protobuf.Enum) {\r\n    return parseInt(List(Object.keys(resolvedType.valuesById)).sort().first(), 10);\r\n  } else if (resolvedType.constructor === protobuf.Type) {\r\n    return Map();\r\n  }\r\n  console.error(\"Unhandled default type\", fieldType);\r\n  return \"\";\r\n}\r\n\r\nexport {\r\n  converterFormats,\r\n  converterName,\r\n  converterExtension,\r\n  convertTo,\r\n  convertFrom,\r\n  defaultValueEntryForField,\r\n  messageToProto\r\n};\r\n","const { fromJS } = require('immutable');\r\n\r\nconst protos = {\r\n  load: () => {\r\n    const rawStoredProtos = fromJS(JSON.parse(window.localStorage.getItem('stored_protos') || \"{}\"));\r\n    console.log('rawStoredProtos', rawStoredProtos);\r\n    return rawStoredProtos;\r\n  },\r\n  save: rawStoredProtos => {\r\n    if (rawStoredProtos.isEmpty()) {\r\n      console.log('REMOVING:', rawStoredProtos.toJSON());\r\n      window.localStorage.removeItem('stored_protos');\r\n    } else {\r\n      console.log('SAVING:', rawStoredProtos.toJSON());\r\n      window.localStorage.setItem('stored_protos', JSON.stringify(rawStoredProtos.toJSON()));\r\n    }\r\n  }\r\n};\r\n\r\nconst format = {\r\n  load: () => {\r\n    return window.localStorage.getItem('format') || 'binary';\r\n  },\r\n  save: format => {\r\n    if (format === 'binary') {\r\n      window.localStorage.removeItem('format');\r\n    } else {\r\n      window.localStorage.setItem('format', format);\r\n    }\r\n  }\r\n}\r\n\r\nexport default {protos, format};\r\n","import React from 'react';\r\nconst protobuf = require(\"protobufjs\");\r\nconst shortid = require('shortid');\r\nconst ProtoConvert = require('../ProtoConvert')\r\n\r\nconst { List } = require('immutable');\r\n\r\nclass MessageBuilderScaffold extends React.Component {\r\n  render() {\r\n    if (this.props.messageDescriptor === undefined) {\r\n      return null;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          {this.props.messageDescriptor.name} builder\r\n        </h1>\r\n        <MessageFieldsBuilder\r\n          path={List()}\r\n          messageDescriptor={this.props.messageDescriptor}\r\n          values={this.props.message}\r\n          callbacks={this.props.callbacks} />\r\n        <Output\r\n          messageDescriptor={this.props.messageDescriptor}\r\n          format={this.props.format}\r\n          builtMessage={this.props.builtMessage}\r\n          buildMessageUpToDate={this.props.buildMessageUpToDate}\r\n          callbacks={this.props.callbacks} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Output extends React.Component {\r\n  handleExportToFile = () => this.props.callbacks.onExport('file');\r\n\r\n  handleChangeFormat = (event) =>\r\n    this.props.callbacks.onSetFormat(event.target.value);\r\n\r\n  handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const fileData = new Uint8Array(reader.result);\r\n      this.props.callbacks.onImport(fileData);\r\n    };\r\n    reader.onerror = (err) =>\r\n      console.error('FileLoading of', file, 'failed:', err);\r\n    reader.readAsArrayBuffer(file);\r\n  }\r\n\r\n  handleImportFromFile = () => this.refs.fileuploader.click();\r\n\r\n  handleChangeBuiltMessage = (event) => {\r\n    const value = this.props.format === 'binary' ? new Uint8Array(event.target.value.split(',')) : event.target.value;\r\n    this.props.callbacks.onImport(value);\r\n  }\r\n\r\n  render() {\r\n    const builtMessage = this.props.builtMessage[0]\r\n    const errorMessage = builtMessage === null ? this.props.builtMessage[1] : null;\r\n    return (\r\n      <React.Fragment>\r\n        Format:\r\n        <select\r\n          onChange={this.handleChangeFormat}\r\n          defaultValue={this.props.format}>\r\n          {ProtoConvert.converterFormats.map(key =>\r\n            <option key={key} value={key}>\r\n              {ProtoConvert.converterName(key)}\r\n            </option>\r\n          )}\r\n        </select>\r\n        <br />\r\n        import\r\n        <button onClick={this.handleImportFromFile}>Load from file</button>\r\n        <input\r\n          type=\"file\"\r\n          ref=\"fileuploader\"\r\n          onChange={this.handleFileChange}\r\n          hidden />\r\n        <br />\r\n        export\r\n        <button onClick={this.handleExportToFile}> Save as file </button>\r\n        <br/>\r\n        <textarea\r\n          value={errorMessage || builtMessage}\r\n          cols=\"200\"\r\n          rows=\"3\"\r\n          className={builtMessage === null ? \"invalid\" : \"\"}\r\n          disabled={!this.props.buildMessageUpToDate}\r\n          onChange={this.handleChangeBuiltMessage} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldsBuilder extends React.Component {\r\n\r\n  isRegularField = fieldDescriptor => fieldDescriptor.partOf === null;\r\n\r\n  fieldTypeName = (fieldDescriptor) => {\r\n    const type = fieldDescriptor.type;\r\n    if (fieldDescriptor.map) {\r\n      const keyType = fieldDescriptor.keyType;\r\n      return 'map<' + keyType + ',' + type + '>';\r\n    }\r\n    const repeated = fieldDescriptor.repeated ? '*' : '';\r\n    const required = fieldDescriptor.required ? '!' : '';\r\n    return type + repeated + required;\r\n  }\r\n\r\n  render() {\r\n    const regularFieldDescriptors = Object\r\n      .values(this.props.messageDescriptor.fields)\r\n      .filter(this.isRegularField);\r\n    const oneOfDescriptors = Object\r\n      .values(this.props.messageDescriptor.oneofs || {});\r\n\r\n    const regularFieldItems = regularFieldDescriptors.map(fieldDescriptor =>\r\n      <li key={fieldDescriptor.name}>\r\n        <b>{this.fieldTypeName(fieldDescriptor)}</b> - {fieldDescriptor.name} = {fieldDescriptor.id}\r\n        <MessageFieldValuesBuilder\r\n          path={this.props.path.concat([fieldDescriptor.id])}\r\n          fieldDescriptor={fieldDescriptor}\r\n          valueEntries={this.props.values.get(fieldDescriptor.id) || List()}\r\n          callbacks={this.props.callbacks} />\r\n      </li>\r\n    );\r\n\r\n    const oneOfItems = oneOfDescriptors.map(oneOfDescriptor =>\r\n      <li key={oneOfDescriptor.name}>\r\n        <b>oneof</b> {oneOfDescriptor.name}\r\n        <MessageOneOfFieldValuesBuilder\r\n          path={this.props.path}\r\n          messageDescriptor={this.props.messageDescriptor}\r\n          oneOfDescriptor={oneOfDescriptor}\r\n          values={this.props.values}\r\n          callbacks={this.props.callbacks} />\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <ul>\r\n        {regularFieldItems}\r\n        {oneOfItems}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldValuesBuilder extends React.Component{\r\n  handleSet = () => {\r\n    this.props.callbacks.onAdd(\r\n      this.props.path,\r\n      ProtoConvert.defaultValueEntryForField(this.props.fieldDescriptor));\r\n  }\r\n\r\n  render() {\r\n    const showSet = this.props.valueEntries.size === 0;\r\n    const showAdd = this.props.fieldDescriptor.repeated || this.props.fieldDescriptor.map;\r\n\r\n    return (\r\n      <ul>\r\n        {this.props.valueEntries.map((valueEntry, index) =>\r\n          <MessageFieldValueBuilder\r\n            key={valueEntry.get('id')}\r\n            path={this.props.path}\r\n            index={index}\r\n            numEntries={this.props.valueEntries.size}\r\n            fieldDescriptor={this.props.fieldDescriptor}\r\n            valueEntry={valueEntry}\r\n            callbacks={this.props.callbacks} />\r\n        )}\r\n        {(showAdd || showSet) &&\r\n          <li>\r\n            <button onClick={this.handleSet}> {(showAdd) ? 'add' : 'set'} </button>\r\n          </li>\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldValueBuilder extends React.Component{\r\n  handleDelete = () =>\r\n    this.props.callbacks.onDelete(this.props.path.concat([this.props.index]));\r\n\r\n  handleDuplicate = () => {\r\n    this.props.callbacks.onAdd(\r\n      this.props.path,\r\n      this.props.valueEntry.set('id', shortid.generate())\r\n    );\r\n  }\r\n\r\n  handleMoveUp = () => {\r\n    this.props.callbacks.onMove(this.props.path, this.props.index, this.props.index - 1);\r\n  }\r\n\r\n  handleMoveDown = () => {\r\n    this.props.callbacks.onMove(this.props.path, this.props.index, this.props.index + 1);\r\n  }\r\n\r\n  render() {\r\n    const showDelete = this.props.fieldDescriptor.partOf === null;\r\n    const showDuplicate = this.props.fieldDescriptor.repeated || this.props.fieldDescriptor.map;\r\n    const showMove = this.props.fieldDescriptor.repeated;\r\n    const enableMoveDown = this.props.index !== this.props.numEntries - 1;\r\n    const enableMoveUp = this.props.index !== 0;\r\n    return (\r\n      <li key={this.props.valueEntry.get('id')}>\r\n        <button\r\n          onClick={this.handleDelete}\r\n          hidden={!showDelete}\r\n          className=\"tiny\">\r\n          -\r\n        </button>\r\n        <button\r\n          onClick={this.handleDuplicate}\r\n          hidden={!showDuplicate}\r\n          className=\"tiny\">\r\n          *\r\n        </button>\r\n        <button\r\n          onClick={this.handleMoveDown}\r\n          hidden={!showMove}\r\n          disabled={!enableMoveDown}\r\n          className=\"tiny\">\r\n          v\r\n        </button>\r\n        <button\r\n          onClick={this.handleMoveUp}\r\n          hidden={!showMove}\r\n          disabled={!enableMoveUp}\r\n          className=\"tiny\">\r\n          ^\r\n        </button>\r\n        {\r\n          this.props.fieldDescriptor.map\r\n          ? <MessageFieldInput\r\n              path={this.props.path.concat([this.props.index, 'key'])}\r\n              fieldType={this.props.fieldDescriptor.keyType}\r\n              resolvedType={null}\r\n              value={this.props.valueEntry.get('key')}\r\n              callbacks={this.props.callbacks} />\r\n          : <React.Fragment />\r\n        }\r\n        <MessageFieldInput\r\n          path={this.props.path.concat([this.props.index, 'value'])}\r\n          fieldType={this.props.fieldDescriptor.type}\r\n          resolvedType={this.props.fieldDescriptor.resolvedType}\r\n          value={this.props.valueEntry.get('value')}\r\n          callbacks={this.props.callbacks} />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageOneOfFieldValuesBuilder extends React.Component {\r\n\r\n  currentFieldDescriptor = () => {\r\n    const maybeCurrentFieldId = this.props.values.keySeq().find(\r\n      fieldId => this.props.messageDescriptor.fieldsById[fieldId].partOf === this.props.oneOfDescriptor);\r\n    if (maybeCurrentFieldId === undefined) {\r\n      return null;\r\n    }\r\n    return this.props.messageDescriptor.fieldsById[maybeCurrentFieldId];\r\n  }\r\n\r\n  onChange = (event) => {\r\n    const currentFieldDescriptor = this.currentFieldDescriptor();\r\n    if (currentFieldDescriptor !== null) {\r\n      this.props.callbacks.onDelete(this.props.path.concat([currentFieldDescriptor.id, 0]));\r\n    }\r\n    if (event.target.value.length !== 0) {\r\n      const newFieldId = parseInt(event.target.value, 10);\r\n      const newFieldDescriptor = this.props.messageDescriptor.fieldsById[newFieldId];\r\n      this.props.callbacks.onAdd(\r\n        this.props.path.concat([newFieldDescriptor.id]),\r\n        ProtoConvert.defaultValueEntryForField(newFieldDescriptor)\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const maybeCurrentFieldDescriptor = this.currentFieldDescriptor();\r\n    console.log('MessageOneOfFieldValuesBuilder', maybeCurrentFieldDescriptor);\r\n    return (\r\n      <React.Fragment>\r\n        <ul>\r\n          <li>\r\n            <select\r\n              value={maybeCurrentFieldDescriptor !== null ? maybeCurrentFieldDescriptor.id : ''}\r\n              onChange={this.onChange}>\r\n              <option value={''}></option>\r\n              {this.props.oneOfDescriptor.fieldsArray.map(\r\n                (fieldDescriptor) => (\r\n                  <option\r\n                    key={fieldDescriptor.id}\r\n                    value={fieldDescriptor.id}>\r\n                    {fieldDescriptor.type} - {fieldDescriptor.name} = {fieldDescriptor.id}\r\n                  </option>\r\n                )\r\n              )}\r\n            </select>\r\n            {(maybeCurrentFieldDescriptor !== null\r\n              ? <MessageFieldValuesBuilder\r\n                  path={this.props.path.concat([maybeCurrentFieldDescriptor.id])}\r\n                  fieldDescriptor={maybeCurrentFieldDescriptor}\r\n                  valueEntries={this.props.values.get(maybeCurrentFieldDescriptor.id) || List()}\r\n                  callbacks={this.props.callbacks} />\r\n              : <React.Fragment />\r\n            )}\r\n          </li>\r\n        </ul>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFieldInput extends React.Component {\r\n  render() {\r\n    switch (this.props.fieldType) {\r\n      case \"string\":\r\n        return <MessageTextInput\r\n          path={this.props.path}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"bytes\":\r\n        return <MessageBytesInput\r\n          path={this.props.path}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"int32\":\r\n      case \"int64\":\r\n      case \"sint32\":\r\n      case \"sint64\":\r\n      case \"uint32\":\r\n      case \"uint64\":\r\n      case \"fixed32\":\r\n      case \"fixed64\":\r\n        return <MessageIntInput\r\n          path={this.props.path}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"float\":\r\n      case \"double\":\r\n        return <MessageFloatInput\r\n          path={this.props.path}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      case \"bool\":\r\n        return <MessageBoolInput\r\n          path={this.props.path}\r\n          value={this.props.value}\r\n          callbacks={this.props.callbacks} />\r\n      default:\r\n        break;\r\n    }\r\n    const resolvedType = this.props.resolvedType;\r\n    if (resolvedType.constructor === protobuf.Enum) {\r\n      return <MessageEnumInput\r\n        path={this.props.path}\r\n        type={resolvedType}\r\n        value={this.props.value}\r\n        callbacks={this.props.callbacks} />\r\n    } else if (resolvedType.constructor === protobuf.Type) {\r\n      return <MessageFieldsBuilder\r\n        path={this.props.path}\r\n        messageDescriptor={resolvedType}\r\n        values={this.props.value}\r\n        callbacks={this.props.callbacks} />\r\n    }\r\n    console.error(\"Unhandled input type\", this.props.fieldType);\r\n    return <div/>\r\n  }\r\n}\r\n\r\nclass MessageTextInput extends React.Component {\r\n  handleChange = (event) => {\r\n    // console.log('MessageTextInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return <textarea onChange={this.handleChange} value={this.props.value} />\r\n  }\r\n}\r\n\r\nclass MessageBytesInput extends React.Component {\r\n  isValid = () => protobuf.util.base64.test(this.props.value);\r\n\r\n  handleChange = (event) => {\r\n    // console.log(\"MessageBytesInput change\", this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const isValid = this.isValid();\r\n    return (\r\n      <textarea\r\n        onChange={this.handleChange}\r\n        value={this.props.value}\r\n        className={isValid ? \"\" : \"invalid\"} />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass MessageIntInput extends React.Component {\r\n  isValid = () => /^[0-9]+$/.test(this.props.value);\r\n\r\n  handleChange = (event) => {\r\n    // console.log('MessageIntInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const isValid = this.isValid();\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        onChange={this.handleChange}\r\n        value={this.props.value}\r\n        className={isValid ? \"\" : \"invalid\"} />\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageFloatInput extends React.Component {\r\n  isValid = () =>\r\n    /^[0-9]+$|^[0-9]+[.][0-9]*$|^[0-9]*[.][0-9]+$/.test(this.props.value);\r\n\r\n  handleChange = (event) => {\r\n    // console.log('MessageFloatInput change', this.props.path, event.target.value);\r\n    this.props.callbacks.onSet(this.props.path, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const isValid = this.isValid();\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        onChange={this.handleChange}\r\n        value={this.props.value}\r\n        className={isValid ? \"\" : \"invalid\"} />\r\n    );\r\n  }\r\n}\r\n\r\nclass MessageBoolInput extends React.Component {\r\n  handleChange = (event) => {\r\n    // console.log('MessageBoolInput', this.props.path, event.target.checked);\r\n    this.props.callbacks.onSet(this.props.path, event.target.checked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={this.props.value}\r\n        onChange={this.handleChange} />\r\n    )\r\n  }\r\n}\r\n\r\nclass MessageEnumInput extends React.Component {\r\n  handleChange = (event) => {\r\n    const value = parseInt(event.target.value);\r\n    // console.log('MessageEnumInput.change', this.props.path, typeof(value), value);\r\n    this.props.callbacks.onSet(this.props.path, value);\r\n  }\r\n\r\n  render() {\r\n    const keys = List(Object.keys(this.props.type.valuesById)).sort();\r\n    return (\r\n      <select defaultValue={this.props.value} onChange={this.handleChange}>\r\n        {keys.map(key => (\r\n          <option value={key} key={key}>\r\n            {this.props.type.valuesById[key]} = {key}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessageBuilderScaffold;\r\n","import React from 'react';\r\nconst protobuf = require(\"protobufjs\");\r\nconst { List } = require('immutable');\r\n\r\nclass ProtoLibrary extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2>\r\n          Known namespaces and messages\r\n        </h2>\r\n        <ProtoRoot\r\n          protoRoot={this.props.protoRoot}\r\n          callbacks={this.props.callbacks} />\r\n        <h2>\r\n          Known files\r\n        </h2>\r\n        <ProtoFiles\r\n          filenames={this.props.filenames}\r\n          fileDependencies={this.props.fileDependencies}\r\n          callbacks={this.props.callbacks} />\r\n        <ProtoInput callbacks={this.props.callbacks} />\r\n        <ProtoUpload callbacks={this.props.callbacks} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoRoot extends React.Component {\r\n  render() {\r\n    if (!this.props.protoRoot) {\r\n      return <React.Fragment />;\r\n    }\r\n    return <ProtoNamespace\r\n      name={''}\r\n      namespace={this.props.protoRoot}\r\n      callbacks={this.props.callbacks} />\r\n  }\r\n}\r\n\r\nclass ProtoNamespace extends React.Component {\r\n  handleBuild = () =>\r\n    this.props.callbacks.onSelectMessageDescriptor(this.props.namespace);\r\n\r\n  render() {\r\n    const nested = this.props.namespace.nested || {};\r\n    const entries = Object.entries(nested);\r\n    const namespaces = entries.filter(([k, v]) => v.constructor === protobuf.Namespace);\r\n    const types = entries.filter(([k, v]) => v.constructor === protobuf.Type);\r\n\r\n    if (this.props.namespace.constructor === protobuf.Namespace) {\r\n      const baseName = this.props.name ? this.props.name + '.' : '';\r\n      if (namespaces.length === 1 && types.length === 0) {\r\n        const [subNamespaceName, subNamespace] = namespaces[0];\r\n        return <ProtoNamespace\r\n          name={baseName + subNamespaceName}\r\n          namespace={subNamespace}\r\n          callbacks={this.props.callbacks} />\r\n      } else if (namespaces.length === 0 && types.length === 1) {\r\n        const [subMessageName, subMessage] = types[0];\r\n        return <ProtoMessage\r\n          name={baseName + subMessageName}\r\n          message={subMessage}\r\n          callbacks={this.props.callbacks} />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.name}\r\n        <button\r\n          onClick={this.handleBuild}\r\n          hidden={!this.props.buildable}>\r\n          build\r\n        </button>\r\n        <ul>\r\n          {namespaces.map(([k ,v]) =>\r\n            <li key={k} >\r\n              <ProtoNamespace\r\n                name={k}\r\n                namespace={v}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n          )}\r\n          {types.map(([k, v]) =>\r\n            <li key={k}>\r\n              <ProtoMessage\r\n                name={k}\r\n                message={v}\r\n                callbacks={this.props.callbacks} />\r\n            </li>\r\n           )}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoMessage extends React.Component {\r\n render() {\r\n   return (\r\n    <ProtoNamespace\r\n      name={this.props.name}\r\n      namespace={this.props.message}\r\n      buildable={true}\r\n      callbacks={this.props.callbacks} />);\r\n  }\r\n}\r\n\r\nclass ProtoFiles extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.filenames.sort().map(filename =>\r\n          <li key={filename}>\r\n            <ProtoFile\r\n              filename={filename}\r\n              fileDependencies={this.props.fileDependencies}\r\n              callbacks={this.props.callbacks} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoFile extends React.Component {\r\n  handleClick = () => {\r\n    this.props.callbacks.onRemoveProto(this.props.filename);\r\n  }\r\n\r\n  render() {\r\n    const fileDependents = this.props.fileDependencies.get(this.props.filename, List());\r\n\r\n    const importingFiles = (fileDependents.isEmpty()\r\n      ? <React.Fragment />\r\n      : <ProtoFiles\r\n          filenames={fileDependents}\r\n          fileDependencies={this.props.fileDependencies}\r\n          callbacks={this.props.callbacks}/>);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          onClick={this.handleClick}\r\n          disabled={!fileDependents.isEmpty()}\r\n          className=\"tiny\">\r\n           -\r\n        </button>\r\n        {this.props.filename}\r\n        {importingFiles}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ProtoInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdding: false\r\n    }\r\n  }\r\n\r\n  handleStartAdding = () => this.setState({isAdding: true});\r\n\r\n  handleSubmit = () => {\r\n    const fileName = this.refs.fileName.value;\r\n    const protoContent = this.refs.protoText.value;\r\n    this.setState({isAdding: false});\r\n    this.props.callbacks.onAddProto(fileName, protoContent);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isAdding) {\r\n      return <button onClick={this.handleStartAdding} > Add </button>\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        File name: <input type=\"text\" ref=\"fileName\" /> <br />\r\n        ProtoContent: <br />\r\n        <textarea ref=\"protoText\"/> <br />\r\n        <button onClick={this.handleSubmit} > Submit </button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nclass ProtoUpload extends React.Component {\r\n  handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const text = reader.result;\r\n      this.props.callbacks.onAddProto(file.name, text);\r\n    };\r\n    reader.onerror = (err) => {\r\n      console.error('FileLoading of', file, 'failed:', err);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  handleClick = () => this.refs.fileuploader.click();\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.handleClick}>\r\n          From disk\r\n        </button>\r\n        <input\r\n          type=\"file\"\r\n          ref=\"fileuploader\"\r\n          onChange={this.handleFileChange}\r\n          hidden />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtoLibrary;\r\n","import React from 'react';\r\nimport LocalStorage from '../LocalStorage'\r\nimport MessageBuilderScaffold from './MessageBuilder';\r\nimport ProtoLibrary from './ProtoLibrary';\r\nconst ProtoConvert = require('../ProtoConvert')\r\nconst protobuf = require(\"protobufjs\");\r\nconst FileSaver = require(\"file-saver\");\r\nconst { List, Map } = require('immutable');\r\n\r\nfunction loadStoredProtos(rawStoredProtos) {\r\n  // Cheat a bit so that we can load files synchronously\r\n  protobuf.util.isNode = true;\r\n  protobuf.util.fs = {\r\n    readFileSync: (filename) => {\r\n      const storedProto = rawStoredProtos.get(filename);\r\n      if (storedProto === undefined) {\r\n        throw new Error('Needed to load unknown file: ' + filename);\r\n      }\r\n      return storedProto.get('contents');\r\n    }\r\n  };\r\n\r\n  const protoRoot = new protobuf.Root();\r\n  const filenames = rawStoredProtos.keySeq().toList();\r\n  protoRoot.loadSync(filenames.toJS(), { keepCase: true });\r\n\r\n  const importEntries = List(filenames.flatMap(filename => {\r\n    const imports = protobuf.parse(\r\n      rawStoredProtos.get(filename).get('contents')\r\n    ).imports || [];\r\n    return imports.map(importName => [importName, filename]);\r\n  }));\r\n  const groupedEntries = importEntries\r\n    .groupBy(([importName, filename]) => importName)\r\n  const mappedEntries = groupedEntries\r\n    .map(importNameAndFilenames => {\r\n      const filenames = importNameAndFilenames.map(([importName, filename]) => filename);\r\n      const filenameSet = filenames.toSet();\r\n      return filenameSet;\r\n    });\r\n  const fileDependencies = mappedEntries;\r\n\r\n  protoRoot.resolveAll();\r\n\r\n  return {protoRoot, fileDependencies};\r\n}\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rawStoredProtos: Map(),\r\n      protoRoot: null,\r\n      fileDependencies: Map(),\r\n      message: Map(),\r\n      format: 'binary',\r\n      builtMessage: ['', null],\r\n    }\r\n    this.libraryCallbacks = {\r\n      onAddProto: this.handleAddProto,\r\n      onRemoveProto: this.handleRemoveProto,\r\n      onSelectMessageDescriptor: this.handleSelectMessageDescriptor,\r\n    };\r\n    this.messageBuilderCallbacks = {\r\n      onAdd: this.handleAddToMessage,\r\n      onDelete: this.handleDeleteFromMessage,\r\n      onSet: this.handleSetInMessage,\r\n      onMove: this.handleMoveInMessage,\r\n      onSetFormat: this.handleSetFormat,\r\n      onExport: this.handleExportMessage,\r\n      onImport: this.handleImportMessage,\r\n    };\r\n  }\r\n\r\n  handleAddProto = (fileName, protoContent) => {\r\n    this.setState((state) => {\r\n      const rawStoredProtos = state.rawStoredProtos.setIn([fileName], Map({contents: protoContent}));\r\n      const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\r\n      return {rawStoredProtos, protoRoot, fileDependencies};\r\n    });\r\n  }\r\n\r\n  handleRemoveProto = (fileName) => {\r\n    // console.log('handleRemoveProto', this.state.rawStoredProtos.toString());\r\n    this.setState((state) => {\r\n      const rawStoredProtos = state.rawStoredProtos.delete(fileName);\r\n      const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\r\n      return {rawStoredProtos, protoRoot, fileDependencies};\r\n    });\r\n  }\r\n\r\n  handleSelectMessageDescriptor = (messageDescriptor) => {\r\n    console.log('Setting descriptor to build:', messageDescriptor);\r\n    this.setState({\r\n      messageDescriptor,\r\n      message: Map(),\r\n      builtMessage: ['', null],\r\n      messageBuildTimer: null,\r\n    });\r\n  }\r\n\r\n  handleSetFormat = (format) => {\r\n    this.setState({\r\n      format,\r\n      builtMessage: [\r\n        ProtoConvert.convertTo(\r\n          format,\r\n          this.state.messageDescriptor,\r\n          this.state.message),\r\n        null\r\n      ],\r\n      messageBuildTimer: null,\r\n    });\r\n  }\r\n\r\n  handleExportMessage = (kind) => {\r\n    console.log('Export', this.state.format, 'to', kind);\r\n\r\n    const data = ProtoConvert.convertTo(\r\n      this.state.format,\r\n      this.state.messageDescriptor,\r\n      this.state.message);\r\n    // console.log('data', data);\r\n    console.log('handleExportMessage', this.refs);\r\n\r\n    if (kind === 'file') {\r\n      const extension = ProtoConvert.converterExtension(this.state.format);\r\n      const blob = new Blob([data], {type: 'application/octet-stream'});\r\n      FileSaver.saveAs(blob, this.state.messageDescriptor.name + '.' + extension);\r\n    } else {\r\n      console.error('Unhandled export kind:', kind);\r\n    }\r\n  }\r\n\r\n  handleImportMessage = (data) => {\r\n    console.log('Import', data.length, 'bytes as', this.state.format);\r\n    const message = ProtoConvert.convertFrom(\r\n      this.state.format,\r\n      this.state.messageDescriptor,\r\n      data\r\n    );\r\n    this.setState({\r\n      message,\r\n      builtMessage: [\r\n        ProtoConvert.convertTo(\r\n          this.state.format,\r\n          this.state.messageDescriptor,\r\n          message),\r\n        null\r\n      ],\r\n      messageBuildTimer: null,\r\n    });\r\n  }\r\n\r\n  handleAddToMessage = (path, valueEntry) => {\r\n    // console.log('handleAddToMessage', this.state.message, path.toString(), valueEntry);\r\n    this.setState((state) => ({\r\n      message: state.message.updateIn(\r\n        path,\r\n        (list = List()) => list.push(valueEntry)\r\n      ),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  handleDeleteFromMessage = (path) => {\r\n    // console.log('handleDeleteFromMessage', this.state.message, path.toString());\r\n    this.setState((state) => {\r\n      const listPath = path.pop();\r\n      const listKey = listPath.last();\r\n      const messagePath = listPath.pop()\r\n      const messageWithDeletedListEntry = state.message.deleteIn(path);\r\n      // Delete the whole list if the last entry is removed\r\n      const newMessage = messageWithDeletedListEntry.updateIn(\r\n        messagePath,\r\n        message => (\r\n          message.get(listKey).isEmpty()\r\n          ? message.delete(listKey)\r\n          : message));\r\n      return {\r\n        message: newMessage,\r\n        messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n      };\r\n    });\r\n  }\r\n\r\n  handleSetInMessage = (path, valueEntry) => {\r\n    // console.log('handleSetInMessage', this.state.message, path.toString(), valueEntry);\r\n    this.setState((state) => ({\r\n      message: state.message.setIn(path, valueEntry),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  handleMoveInMessage = (path, fromIndex, toIndex) => {\r\n    this.setState((state) => ({\r\n      message: state.message.updateIn(\r\n        path,\r\n        (list = List()) => {\r\n          const movedEntry = list.get(fromIndex);\r\n          return list.delete(fromIndex).insert(toIndex, movedEntry);\r\n        }\r\n      ),\r\n      messageBuildTimer: this.scheduleBuildMessage(state.messageBuildTimer),\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rawStoredProtos = LocalStorage.protos.load();\r\n    const {protoRoot, fileDependencies} = loadStoredProtos(rawStoredProtos);\r\n    const format = LocalStorage.format.load();\r\n\r\n    this.setState({\r\n      rawStoredProtos,\r\n      protoRoot,\r\n      fileDependencies,\r\n      format,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.rawStoredProtos !== this.state.rawStoredProtos) {\r\n      LocalStorage.protos.save(this.state.rawStoredProtos);\r\n    }\r\n    if (prevState.format !== this.state.format) {\r\n      LocalStorage.format.save(this.state.format);\r\n    }\r\n  }\r\n\r\n  scheduleBuildMessage = (prevTimeout) => {\r\n    clearTimeout(prevTimeout);\r\n    return setTimeout(() =>\r\n      this.setState((state) => {\r\n        try {\r\n          return {\r\n            builtMessage: [\r\n              ProtoConvert.convertTo(\r\n                state.format,\r\n                state.messageDescriptor,\r\n                state.message),\r\n                null\r\n            ],\r\n            messageBuildTimer: null,\r\n          };\r\n        } catch (err) {\r\n          return {\r\n            builtMessage: [null, err],\r\n            messageBuildTimer: null,\r\n          }\r\n        }\r\n      }),\r\n      500\r\n    );\r\n  }\r\n\r\n  fullMessageDescriptorName = (messageDescriptor) => {\r\n    if (!messageDescriptor) {\r\n      return \"\";\r\n    }\r\n    var name = messageDescriptor.name;\r\n    while (messageDescriptor.parent && messageDescriptor.parent.name) {\r\n      name = messageDescriptor.parent.name + '.' + name;\r\n      messageDescriptor = messageDescriptor.parent;\r\n    }\r\n    name = messageDescriptor.filename + ':' + name;\r\n    return name;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"protool\">\r\n        <div className=\"message-builder\">\r\n          <MessageBuilderScaffold\r\n            key={this.fullMessageDescriptorName(this.state.messageDescriptor)}\r\n            messageDescriptor={this.state.messageDescriptor}\r\n            message={this.state.message}\r\n            format={this.state.format}\r\n            builtMessage={this.state.builtMessage}\r\n            buildMessageUpToDate={this.state.messageBuildTimer === null}\r\n            callbacks={this.messageBuilderCallbacks} />\r\n        </div>\r\n        <div className=\"proto-library\">\r\n          <ProtoLibrary\r\n            filenames={this.state.rawStoredProtos.keySeq().toList()}\r\n            fileDependencies={this.state.fileDependencies}\r\n            protoRoot={this.state.protoRoot}\r\n            callbacks={this.libraryCallbacks} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './view/Main';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Main />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}